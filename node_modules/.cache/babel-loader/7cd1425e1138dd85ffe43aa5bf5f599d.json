{"ast":null,"code":"import _defineProperty from\"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import React from'react';import HorizontalNavsCustom1 from'../components-custom/HorizontalNavsCustom1';import CallToActionCustom2 from'../components-custom/CallToActionCustom2';import StructuresCustom3 from'../components-custom/StructuresCustom3';import StructuresCustom4 from'../components-custom/StructuresCustom4';import{ChainId,DAppProvider,BSCTestnet,Config}from\"@usedapp/core\";import{useEthers}from\"@usedapp/core\";import{providers}from\"ethers\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var bscProvider=new providers.JsonRpcProvider(\"https://data-seed-prebsc-1-s1.binance.org\");bscProvider.pollingInterval=10000;var config={readOnlyChainId:BSCTestnet.chainId,readOnlyUrls:_defineProperty({},BSCTestnet.chainId,bscProvider),pollingInterval:10000,notifications:{expirationPeriod:1000,checkInterval:1000}};export default function Index(){return/*#__PURE__*/_jsx(DAppProvider,{config:config,children:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(HorizontalNavsCustom1,{}),/*#__PURE__*/_jsx(CallToActionCustom2,{})]})});}","map":{"version":3,"sources":["/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/src/pages/Index.js"],"names":["React","HorizontalNavsCustom1","CallToActionCustom2","StructuresCustom3","StructuresCustom4","ChainId","DAppProvider","BSCTestnet","Config","useEthers","providers","bscProvider","JsonRpcProvider","pollingInterval","config","readOnlyChainId","chainId","readOnlyUrls","notifications","expirationPeriod","checkInterval","Index"],"mappings":"4KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,qBAAP,KAAkC,4CAAlC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,0CAAhC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,wCAA9B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,wCAA9B,CAEA,OAASC,OAAT,CAAkBC,YAAlB,CAAgCC,UAAhC,CAA4CC,MAA5C,KAA2D,eAA3D,CACA,OAASC,SAAT,KAA0B,eAA1B,CACA,OAASC,SAAT,KAA0B,QAA1B,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,GAAID,CAAAA,SAAS,CAACE,eAAd,CAA8B,2CAA9B,CAApB,CACAD,WAAW,CAACE,eAAZ,CAA8B,KAA9B,CAEA,GAAMC,CAAAA,MAAc,CAAG,CACrBC,eAAe,CAAER,UAAU,CAACS,OADP,CAErBC,YAAY,oBACTV,UAAU,CAACS,OADF,CACYL,WADZ,CAFS,CAKrBE,eAAe,CAAE,KALI,CAMrBK,aAAa,CAAE,CACbC,gBAAgB,CAAE,IADL,CAEbC,aAAa,CAAE,IAFF,CANM,CAAvB,CAYA,cAAe,SAASC,CAAAA,KAAT,EAAiB,CAC9B,mBACE,KAAC,YAAD,EAAc,MAAM,CAAEP,MAAtB,uBACI,MAAC,KAAD,CAAO,QAAP,yBACE,KAAC,qBAAD,IADF,cAEE,KAAC,mBAAD,IAFF,GADJ,EADF,CAQD","sourcesContent":["import React from 'react';\n\nimport HorizontalNavsCustom1 from '../components-custom/HorizontalNavsCustom1';\nimport CallToActionCustom2 from '../components-custom/CallToActionCustom2';\nimport StructuresCustom3 from '../components-custom/StructuresCustom3';\nimport StructuresCustom4 from '../components-custom/StructuresCustom4';\n\nimport { ChainId, DAppProvider, BSCTestnet, Config, } from \"@usedapp/core\";\nimport { useEthers } from \"@usedapp/core\";\nimport { providers } from \"ethers\"\n\nconst bscProvider = new providers.JsonRpcProvider(\"https://data-seed-prebsc-1-s1.binance.org\")\nbscProvider.pollingInterval = 10_000;\n\nconst config: Config = {\n  readOnlyChainId: BSCTestnet.chainId,\n  readOnlyUrls: {\n    [BSCTestnet.chainId]: bscProvider,\n  },\n  pollingInterval: 10000,\n  notifications: {\n    expirationPeriod: 1000,\n    checkInterval: 1000\n  }\n}\n\nexport default function Index() {\n  return (\n    <DAppProvider config={config}>\n        <React.Fragment>\n          <HorizontalNavsCustom1 />\n          <CallToActionCustom2 />\n        </React.Fragment>\n    </DAppProvider>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}