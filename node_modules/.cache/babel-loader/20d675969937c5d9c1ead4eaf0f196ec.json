{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { utils } from 'ethers';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function warnOnInvalidCall(call) {\n  if (!call) {\n    return;\n  }\n\n  var contract = call.contract,\n      method = call.method,\n      args = call.args;\n  console.warn(\"Invalid contract call: address=\".concat(contract.address, \" method=\").concat(method, \" args=\").concat(args));\n}\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function encodeCallData(call, chainId) {\n  if (!call) {\n    return undefined;\n  }\n\n  var contract = call.contract,\n      method = call.method,\n      args = call.args;\n\n  if (!contract.address || !method) {\n    warnOnInvalidCall(call);\n    return undefined;\n  }\n\n  try {\n    return {\n      address: contract.address,\n      data: contract.interface.encodeFunctionData(method, args),\n      chainId: chainId\n    };\n  } catch (_a) {\n    warnOnInvalidCall(call);\n    return undefined;\n  }\n}\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function getUniqueCalls(requests) {\n  var unique = [];\n  var used = {};\n\n  var _iterator = _createForOfIteratorHelper(requests),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var request = _step.value;\n\n      if (!used[\"\".concat(request.address.toLowerCase()).concat(request.data).concat(request.chainId)]) {\n        unique.push(request);\n        used[\"\".concat(request.address.toLowerCase()).concat(request.data).concat(request.chainId)] = true;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return unique;\n}\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function decodeCallResult(call, result) {\n  if (!result || !call) {\n    return undefined;\n  }\n\n  var value = result.value,\n      success = result.success;\n\n  try {\n    if (success) {\n      return {\n        value: call.contract.interface.decodeFunctionResult(call.method, value),\n        error: undefined\n      };\n    } else {\n      var errorMessage = new utils.Interface(['function Error(string)']).decodeFunctionData('Error', value)[0];\n      return {\n        value: undefined,\n        error: new Error(errorMessage)\n      };\n    }\n  } catch (error) {\n    return {\n      value: undefined,\n      error: error\n    };\n  }\n}","map":{"version":3,"mappings":"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","names":["utils","warnOnInvalidCall","call","contract","method","args","console","warn","address","encodeCallData","chainId","undefined","data","interface","encodeFunctionData","getUniqueCalls","requests","unique","used","request","toLowerCase","push","decodeCallResult","result","value","success","decodeFunctionResult","error","errorMessage","Interface","decodeFunctionData","Error"],"sources":["../../../../src/helpers/calls.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}