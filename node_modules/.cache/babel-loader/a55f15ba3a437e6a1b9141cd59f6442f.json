{"ast":null,"code":"import { useBlockNumber } from '../providers/blockNumber/blockNumber/context';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useEthers } from './useEthers';\nimport { useReadonlyNetworks } from '../providers/network/readonlyNetworks';\nimport { useBlockNumbers } from '../providers/blockNumber/blockNumbers';\n/**\n * @public\n */\n\nexport function useGasPrice() {\n  let queryParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    library\n  } = useEthers();\n  const providers = useReadonlyNetworks();\n\n  const _blockNumber = useBlockNumber();\n\n  const blockNumbers = useBlockNumbers();\n  const [gasPrice, setGasPrice] = useState();\n  const {\n    chainId\n  } = queryParams;\n  const [provider, blockNumber] = useMemo(() => chainId ? [providers[chainId], blockNumbers[chainId]] : [library, _blockNumber], [providers, library, blockNumbers, _blockNumber]);\n\n  async function updateGasPrice() {\n    setGasPrice(await (provider === null || provider === void 0 ? void 0 : provider.getGasPrice()));\n  }\n\n  useEffect(() => {\n    updateGasPrice();\n  }, [provider, blockNumber]);\n  return gasPrice;\n}","map":{"version":3,"mappings":"AAAA,SAASA,cAAT,QAA+B,8CAA/B;AAEA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,mBAAT,QAAoC,uCAApC;AACA,SAASC,eAAT,QAAgC,uCAAhC;AAGA;;;;AAGA,OAAM,SAAUC,WAAV,GAAmD;AAAA,MAA7BC,WAA6B,uEAAF,EAAE;AACvD,QAAM;AAAEC;AAAF,MAAcL,SAAS,EAA7B;AACA,QAAMM,SAAS,GAAGL,mBAAmB,EAArC;;AACA,QAAMM,YAAY,GAAGX,cAAc,EAAnC;;AACA,QAAMY,YAAY,GAAGN,eAAe,EAApC;AAEA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AAEA,QAAM;AAAEY;AAAF,MAAcP,WAApB;AAEA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0Bf,OAAO,CACrC,MAAOa,OAAO,GAAG,CAACL,SAAS,CAACK,OAAD,CAAV,EAAqBH,YAAY,CAACG,OAAD,CAAjC,CAAH,GAAiD,CAACN,OAAD,EAAUE,YAAV,CAD1B,EAErC,CAACD,SAAD,EAAYD,OAAZ,EAAqBG,YAArB,EAAmCD,YAAnC,CAFqC,CAAvC;;AAKA,iBAAeO,cAAf,GAA6B;AAC3BJ,eAAW,CAAC,OAAME,QAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEG,WAAV,EAAN,CAAD,CAAX;AACD;;AAEDlB,WAAS,CAAC,MAAK;AACbiB,kBAAc;AACf,GAFQ,EAEN,CAACF,QAAD,EAAWC,WAAX,CAFM,CAAT;AAIA,SAAOJ,QAAP;AACD","names":["useBlockNumber","useEffect","useMemo","useState","useEthers","useReadonlyNetworks","useBlockNumbers","useGasPrice","queryParams","library","providers","_blockNumber","blockNumbers","gasPrice","setGasPrice","chainId","provider","blockNumber","updateGasPrice","getGasPrice"],"sources":["../../../../src/hooks/useGasPrice.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}