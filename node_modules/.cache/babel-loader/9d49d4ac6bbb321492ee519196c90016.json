{"ast":null,"code":"import _slicedToArray from\"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _defineProperty from\"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import React from'react';import{makeStyles}from'@material-ui/core/styles';import{emphasize,fade,darken,lighten}from'@material-ui/core/styles/colorManipulator';import clsx from'clsx';import Container from'@material-ui/core/Container';import Box from'@material-ui/core/Box';import Typography from'@material-ui/core/Typography';import TextField from'@material-ui/core/TextField';import InputAdornment from'@material-ui/core/InputAdornment';import Button from'@material-ui/core/Button';import{useEthers,AvalancheTestnet,useCall,useContractFunction}from\"@usedapp/core\";import{utils}from'ethers';import DAGNationABI from\"../DAGNationABI.json\";import{Contract}from'@ethersproject/contracts';import{useState}from\"react\";//setup smart contract interface\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DAGNationAddress='0x3efbCBfCE9E96b83C1c7f496e55D3792db5B0123';var DAGNInterface=new utils.Interface(DAGNationABI);var contract=new Contract(DAGNationAddress,DAGNInterface);var useStyles=makeStyles(function(theme){var _ref;return _ref={heroTitle:{textTransform:'uppercase'},panel:{backgroundColor:'rgb(0,0,0,70%)',borderRadius:'16px'},nodeMeterTitleCont:{display:'inline'},nodeMeterCont:{display:'block',position:'relative',height:'100px'},nodeMeterBK:{position:'absolute',width:'100%',height:'60px',backgroundColor:'#111',border:'2px solid',borderRight:'0',borderColor:'white',borderRadius:'8px',borderBottomRightRadius:'0',borderTopRightRadius:'0'},nodeMeterProg:{position:'absolute',backgroundColor:'#1bb3be',height:'56px',top:'2px',left:'2px',borderRadius:'6px',borderBottomRightRadius:'0',borderTopRightRadius:'0'},nodeMeterTickCont:{position:'absolute',left:'50%',top:'70px'},nodeMeterTick:{position:'absolute',width:'2px',height:'20px',backgroundColor:'white',top:'-20px',left:'0px'},doublePanelCont:{height:'340px',paddingTop:'20px'},doublePanel:{width:'50%',display:'inline-block',height:'100%'},panelDetail:{backgroundColor:'rgb(0,0,0,70%)',borderRadius:'16px',height:'100%',width:'100%',display:'inline-block'},lineBreak:{height:'2px',width:'100%',backgroundColor:'white'},claimButton:{display:'block'},panelCont:{height:'300px',marginTop:'40px'}},_defineProperty(_ref,\"panel\",{backgroundColor:'rgb(0,0,0,70%)',borderRadius:'16px',height:'100%'}),_defineProperty(_ref,\"lineBreak\",{height:'2px',width:'100%',backgroundColor:'white'}),_ref;});var RewardsComponent=function RewardsComponent(){var classes=useStyles();var _useEthers=useEthers(),account=_useEthers.account;var isConnected=account!==undefined;//send claim write to contract\nvar _useContractFunction=useContractFunction(contract,'claimBusd',{transactionName:'Claim'}),state=_useContractFunction.state,send=_useContractFunction.send;var status=state.status;var writeClaimBUSD=function writeClaimBUSD(){send();};//grab wallet rewards amount\nfunction getRewardsAmount(){var _useCall;var _ref2=(_useCall=useCall({contract:contract,// instance of called contract\nmethod:'getHolderBusdAmount',// Method to be called\nargs:[account]// Method arguments - address to be checked\n}))!==null&&_useCall!==void 0?_useCall:{},value=_ref2.value,error=_ref2.error;if(error){console.error(error.message);return undefined;}return value===null||value===void 0?void 0:value[0].toString();}var rewardsAmount=Math.trunc(getRewardsAmount()/1000000000000000000);//grab wallet staked amount\nfunction getStakedAmount(){var _useCall2;var _ref3=(_useCall2=useCall({contract:contract,// instance of called contract\nmethod:'getHolderAmountInPool',// Method to be called\nargs:[account]// Method arguments - address to be checked\n}))!==null&&_useCall2!==void 0?_useCall2:{},value=_ref3.value,error=_ref3.error;if(error){console.error(error.message);return undefined;}return value===null||value===void 0?void 0:value[0].toString();}var stakedAmount=getStakedAmount();var stakedPercentage=0;//grab wallet waiting amount\nfunction getWaitingAmount(){var _useCall3;var _ref4=(_useCall3=useCall({contract:contract,// instance of called contract\nmethod:'getHolderWaitingAmount',// Method to be called\nargs:[account]// Method arguments - address to be checked\n}))!==null&&_useCall3!==void 0?_useCall3:{},value=_ref4.value,error=_ref4.error;if(error){console.error(error.message);return undefined;}return value===null||value===void 0?void 0:value[0].toString();}var waitingAmount=getWaitingAmount();return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",mt:4,className:classes.doublePanelCont,children:[/*#__PURE__*/_jsx(Box,{className:classes.doublePanel,style:{paddingRight:'10px'},children:/*#__PURE__*/_jsxs(Box,{className:classes.panelDetail,p:6,children:[/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:\"My $DAG\"}),/*#__PURE__*/_jsx(Box,{className:classes.lineBreak}),/*#__PURE__*/_jsxs(Box,{mt:2,children:[/*#__PURE__*/_jsx(Box,{style:{display:'inline-block',marginRight:\"5px\"},children:/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:waitingAmount})}),/*#__PURE__*/_jsxs(Box,{style:{display:'inline-block'},children:[/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"body\",color:\"primary\",children:\"DAG Queued\"})}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"body\",color:\"primary\",children:\"for next epoch\"})})]})]}),/*#__PURE__*/_jsxs(Box,{mt:1,children:[/*#__PURE__*/_jsx(Box,{style:{display:'inline-block',marginRight:\"5px\"},children:/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:stakedAmount})}),/*#__PURE__*/_jsxs(Box,{style:{display:'inline-block'},children:[/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"body\",color:\"primary\",children:\"DAG Staked\"})}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"body\",color:\"primary\",children:\"on node\"})})]})]})]})}),/*#__PURE__*/_jsx(Box,{className:classes.doublePanel,style:{paddingLeft:'10px'},children:/*#__PURE__*/_jsxs(Box,{className:classes.panelDetail,p:6,children:[/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:\"My Rewards\"}),/*#__PURE__*/_jsx(Box,{className:classes.lineBreak}),/*#__PURE__*/_jsxs(Box,{mt:2,children:[/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:rewardsAmount}),/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"body\",color:\"primary\",children:\"$BUSD\"})]}),/*#__PURE__*/_jsx(Box,{mt:1,children:/*#__PURE__*/_jsx(Box,{style:{display:'inline-block'},children:/*#__PURE__*/_jsx(Button,{className:classes.claimButton,variant:\"contained\",size:\"large\",onClick:function onClick(){return writeClaimBUSD();},children:\"Claim\"})})})]})})]});};var AdminComponent=function AdminComponent(){var classes=useStyles();var _useEthers2=useEthers(),account=_useEthers2.account;var isConnected=account!==undefined;//see if wallet is admin\nfunction getAdminStatus(){var _useCall4;var _ref5=(_useCall4=useCall({contract:contract,// instance of called contract\nmethod:'checkAdmin',// Method to be called\nargs:[account]// Method arguments - address to be checked\n}))!==null&&_useCall4!==void 0?_useCall4:{},value=_ref5.value,error=_ref5.error;if(error){console.error(error.message);return false;}return value===null||value===void 0?void 0:value[0].toString();}var isAdmin=getAdminStatus();return/*#__PURE__*/_jsx(\"div\",{children:isAdmin?/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",mt:4,className:classes.panelCont,children:/*#__PURE__*/_jsxs(Box,{className:classes.panel,p:6,children:[/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:\"Admin\"}),/*#__PURE__*/_jsx(Box,{className:classes.lineBreak})]})}):/*#__PURE__*/_jsx(\"div\",{})});};export default function Component(props){var classes=useStyles();var meterWidth=Object.assign({wid:'0%'});var _useEthers3=useEthers(),account=_useEthers3.account;var isConnected=account!==undefined;//send invest write to contract\nvar _useContractFunction2=useContractFunction(contract,'invest',{transactionName:'Invest'}),state=_useContractFunction2.state,send=_useContractFunction2.send;var status=state.status;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),investBNBamount=_useState2[0],setInvestBNBamount=_useState2[1];var writeInvestBNB=function writeInvestBNB(){send({value:utils.parseEther(investBNBamount)});};//functions to grab data from contract and update interface\nfunction getDAGamount(){var _useCall5;var _ref6=(_useCall5=useCall({contract:contract,// instance of called contract\nmethod:'getTotalDag',// Method to be called\nargs:[]// Method arguments - address to be checked for power\n}))!==null&&_useCall5!==void 0?_useCall5:{},value=_ref6.value,error=_ref6.error;if(error){console.error(error.message);return undefined;}//update dag meter\nvar meterPerc=value/250000;Object.assign(meterWidth,{wid:meterPerc*50+'%'});return value===null||value===void 0?void 0:value[0].toString();}var stakedDAGamount=getDAGamount();var meterBar=/*#__PURE__*/React.createRef();return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",children:/*#__PURE__*/_jsxs(Box,{px:6,pt:8,pb:6,textAlign:\"left\",children:[/*#__PURE__*/_jsx(Typography,{className:classes.heroTitle,variant:\"h3\",component:\"h2\",gutterBottom:true,children:\"Accessible softnode ownership\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body\",color:\"primary\",children:\"DAGNation provides the opportunity to benefit from the rewrds of node ownership on the Constellation Network. Nodes require 250k $DAG to be staked in them to earn rewards. With DAGNation, you can stake as little at .25 $BNB to participate.\"})]})}),/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",mt:4,children:/*#__PURE__*/_jsxs(Box,{className:classes.panel,p:6,children:[/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:stakedDAGamount}),/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"body\",color:\"primary\",children:\" $DAG Staked\"}),/*#__PURE__*/_jsxs(\"box\",{component:\"div\",className:classes.nodeMeterCont,children:[/*#__PURE__*/_jsx(\"box\",{className:classes.nodeMeterBK}),/*#__PURE__*/_jsx(\"box\",{className:classes.nodeMeterProg,style:{width:meterWidth.wid}}),/*#__PURE__*/_jsxs(\"box\",{component:\"div\",className:classes.nodeMeterTickCont,children:[/*#__PURE__*/_jsx(\"box\",{component:\"div\",className:classes.nodeMeterTick}),/*#__PURE__*/_jsx(\"typography\",{children:\"250k $DAG\"}),/*#__PURE__*/_jsx(\"typography\",{children:\"(node minimum)\"})]})]}),/*#__PURE__*/_jsx(Box,{mt:4,children:/*#__PURE__*/_jsx(Typography,{variant:\"h3\",component:\"h2\",children:\"Buy $DAG and Stake\"})}),/*#__PURE__*/_jsxs(Box,{my:2,children:[/*#__PURE__*/_jsx(TextField,{style:{marginRight:\"20px\",top:\"2px\"},size:\"small\",id:\"outlined-basic\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$BNB\"})},placeholder:\".25 Min\",variant:\"outlined\",onChange:function onChange(event){return setInvestBNBamount(event.target.value);}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"large\",onClick:function onClick(){return writeInvestBNB();},children:\"Buy and Stake\"})]}),/*#__PURE__*/_jsx(Typography,{display:\"block\",variant:\"body\",color:\"primary\",children:\"Your $BNB is swapped for $DAG and put into a queue to wait until the next Softnode epoch starts, where it will be staked in a Constellation Network Softnode. If at least 250,000 $DAG is staked before the epoch starts, produced rewards will be split among stakers per their percentage of the node.\"})]})}),/*#__PURE__*/_jsx(RewardsComponent,{}),/*#__PURE__*/_jsx(AdminComponent,{})]});}","map":{"version":3,"sources":["/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/src/components-custom/CallToActionCustom2.js"],"names":["React","makeStyles","emphasize","fade","darken","lighten","clsx","Container","Box","Typography","TextField","InputAdornment","Button","useEthers","AvalancheTestnet","useCall","useContractFunction","utils","DAGNationABI","Contract","useState","DAGNationAddress","DAGNInterface","Interface","contract","useStyles","theme","heroTitle","textTransform","panel","backgroundColor","borderRadius","nodeMeterTitleCont","display","nodeMeterCont","position","height","nodeMeterBK","width","border","borderRight","borderColor","borderBottomRightRadius","borderTopRightRadius","nodeMeterProg","top","left","nodeMeterTickCont","nodeMeterTick","doublePanelCont","paddingTop","doublePanel","panelDetail","lineBreak","claimButton","panelCont","marginTop","RewardsComponent","classes","account","isConnected","undefined","transactionName","state","send","status","writeClaimBUSD","getRewardsAmount","method","args","value","error","console","message","toString","rewardsAmount","Math","trunc","getStakedAmount","stakedAmount","stakedPercentage","getWaitingAmount","waitingAmount","paddingRight","marginRight","paddingLeft","AdminComponent","getAdminStatus","isAdmin","Component","props","meterWidth","Object","assign","wid","investBNBamount","setInvestBNBamount","writeInvestBNB","parseEther","getDAGamount","meterPerc","stakedDAGamount","meterBar","createRef","startAdornment","event","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { emphasize, fade, darken, lighten } from '@material-ui/core/styles/colorManipulator';\n\nimport clsx from 'clsx';\n\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\n\nimport { useEthers, AvalancheTestnet, useCall, useContractFunction } from \"@usedapp/core\"\nimport { utils } from 'ethers'\nimport DAGNationABI from \"../DAGNationABI.json\"\nimport { Contract } from '@ethersproject/contracts'\nimport { useState } from \"react\"\n\n\n//setup smart contract interface\nconst DAGNationAddress = '0x3efbCBfCE9E96b83C1c7f496e55D3792db5B0123'\nconst DAGNInterface = new utils.Interface(DAGNationABI)\nconst contract = new Contract(DAGNationAddress, DAGNInterface)\n\nconst useStyles = makeStyles((theme) => ({\n  heroTitle:{\n    textTransform: 'uppercase',\n  },\n  panel:{\n    backgroundColor: 'rgb(0,0,0,70%)',\n    borderRadius:'16px'\n  },\n    \n    \n  nodeMeterTitleCont:{\n    display:'inline',\n  },\n  nodeMeterCont:{\n    display:'block',\n \tposition:'relative',  \n      height:'100px',\n  },\n  nodeMeterBK:{\n    position:'absolute',\n    width:'100%',\n    height:'60px',\n    backgroundColor:'#111',\n    border:'2px solid',\n    borderRight:'0',\n    borderColor:'white',\n    borderRadius:'8px',\n    borderBottomRightRadius:'0',\n    borderTopRightRadius:'0',\n  },\n  nodeMeterProg:{\n    position:'absolute',\n    backgroundColor:'#1bb3be',\n    \n    height:'56px',\n    top:'2px',\n    left:'2px',\n    borderRadius:'6px',\n    borderBottomRightRadius:'0',\n    borderTopRightRadius:'0',\n  },\n    \n  nodeMeterTickCont:{\n    position:'absolute',\n    left:'50%',\n    top: '70px',\n  },\n  nodeMeterTick:{\n    position:'absolute',\n    width:'2px',\n    height:'20px',\n    backgroundColor:'white',\n      top:'-20px',\n        left:'0px'\n  },\n    doublePanelCont:{\n      height: '340px',\n      paddingTop: '20px'\n    },\n    doublePanel:{\n        width:'50%',\n        display:'inline-block',\n        height:'100%'\n    },\n    panelDetail:{\n      backgroundColor:  'rgb(0,0,0,70%)',\n      borderRadius:'16px',\n      height: '100%',\n      width: '100%',\n      display:'inline-block',\n    },\n    lineBreak:{\n      height:'2px',\n      width:'100%',\n      backgroundColor:'white'\n    },\n    claimButton:{\n      display:'block',\n      \n    },\n    panelCont:{\n    height: '300px',\n      marginTop:'40px',\n    },\n      panel:{\n      backgroundColor:  'rgb(0,0,0,70%)',\n      borderRadius:'16px',\n      height: '100%',\n     \n    },\n    lineBreak:{\n    height:'2px',\n    width:'100%',\n    backgroundColor:'white'\n    },\n}\n));\n\n\n\n\n\n\nconst RewardsComponent = () => {\n    \n    const classes = useStyles();\n    \n    const { account } = useEthers()\n    const isConnected = account !== undefined\n    \n    //send claim write to contract\n    const { state, send } = useContractFunction(contract, 'claimBusd', { transactionName: 'Claim' })\n    const { status } = state\n    const writeClaimBUSD = () => {\n        send()\n    }\n    \n    //grab wallet rewards amount\n    function getRewardsAmount() {\n       const { value, error } =\n           useCall(\n               {\n                   contract: contract, // instance of called contract\n                   method: 'getHolderBusdAmount', // Method to be called\n                   args: [account], // Method arguments - address to be checked\n               }\n           ) ?? {};\n       if (error) {\n           console.error(error.message)\n           return undefined\n       }\n       return value?.[0].toString()\n    }\n    const rewardsAmount = Math.trunc( getRewardsAmount()  / 1000000000000000000 )\n                           \n    //grab wallet staked amount\n    function getStakedAmount() {\n      const { value, error } =\n          useCall(\n              {\n                  contract: contract, // instance of called contract\n                  method: 'getHolderAmountInPool', // Method to be called\n                  args: [account], // Method arguments - address to be checked\n              }\n          ) ?? {};\n      if (error) {\n          console.error(error.message)\n          return undefined\n      }\n      return value?.[0].toString()\n    }\n    const stakedAmount = getStakedAmount()\n    const stakedPercentage = 0\n                                     \n                                     \n    //grab wallet waiting amount\n    function getWaitingAmount() {\n    const { value, error } =\n       useCall(\n           {\n               contract: contract, // instance of called contract\n               method: 'getHolderWaitingAmount', // Method to be called\n               args: [account], // Method arguments - address to be checked\n           }\n       ) ?? {};\n    if (error) {\n       console.error(error.message)\n       return undefined\n    }\n    return value?.[0].toString()\n    }\n    const waitingAmount = getWaitingAmount()\n    \n    return (\n        <Container maxWidth=\"md\" mt={4} className={classes.doublePanelCont}>\n            <Box className={classes.doublePanel} style={{paddingRight:'10px'}}>\n                <Box className={classes.panelDetail} p={6}>\n                <Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">My $DAG</Typography>\n                <Box className={classes.lineBreak}></Box>\n                <Box mt={2}>\n                    <Box style={{display:'inline-block', marginRight:\"5px\"}}><Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">{waitingAmount}</Typography></Box>\n                    <Box style={{display:'inline-block'}}>\n                        <Box><Typography className={classes.nodeMeterTitleCont} variant=\"body\" color=\"primary\">DAG Queued</Typography></Box>\n                        <Box><Typography className={classes.nodeMeterTitleCont} variant=\"body\" color=\"primary\">for next epoch</Typography></Box>\n                    </Box>\n                </Box>\n                <Box mt={1}>\n                    <Box style={{display:'inline-block', marginRight:\"5px\"}}><Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">{stakedAmount}</Typography></Box>\n                    <Box style={{display:'inline-block'}}>\n                        <Box><Typography className={classes.nodeMeterTitleCont} variant=\"body\" color=\"primary\">DAG Staked</Typography></Box>\n                        <Box><Typography className={classes.nodeMeterTitleCont} variant=\"body\" color=\"primary\">on node</Typography></Box>\n                    </Box>\n                </Box>\n                </Box>\n            </Box>\n            <Box className={classes.doublePanel} style={{paddingLeft:'10px'}}>\n                <Box className={classes.panelDetail} p={6}>\n                    <Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">My Rewards</Typography>\n                    <Box className={classes.lineBreak}></Box>\n                    <Box mt={2}>\n                        <Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">{rewardsAmount}</Typography>\n                      <Typography className={classes.nodeMeterTitleCont} variant=\"body\" color=\"primary\">$BUSD</Typography>\n                    </Box>\n                    <Box mt={1}>\n                        <Box style={{display:'inline-block'}}><Button className={classes.claimButton} variant=\"contained\" size=\"large\" onClick={() => writeClaimBUSD()}>Claim</Button></Box>\n                        \n                    </Box>\n                </Box>\n            </Box>\n            \n        \n        </Container>\n    )\n}\n\n\n\n\n\n\nconst AdminComponent = () => {\n    \n    const classes = useStyles();\n    \n    const { account } = useEthers()\n    const isConnected = account !== undefined\n    \n    //see if wallet is admin\n    function getAdminStatus() {\n       const { value, error } =\n           useCall(\n               {\n                   contract: contract, // instance of called contract\n                   method: 'checkAdmin', // Method to be called\n                   args: [account], // Method arguments - address to be checked\n               }\n           ) ?? {};\n       if (error) {\n           console.error(error.message)\n           return false\n       }\n       return value?.[0].toString()\n    }\n    const isAdmin = getAdminStatus()\n\n    return (\n            <div>\n                {isAdmin ?\n                <Container maxWidth=\"md\" mt={4} className={classes.panelCont}>\n                <Box className={classes.panel} p={6}>\n                  <Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">Admin</Typography>\n                  <Box className={classes.lineBreak}></Box>\n                </Box>\n                </Container>\n                : <div></div> }\n            </div>\n    )\n}\n\n\n\n\n\n\nexport default function Component(props) {\n  const classes = useStyles();\n    \n    const meterWidth = Object.assign({wid:'0%'});\n    \n    const { account } = useEthers()\n    const isConnected = account !== undefined\n    \n    \n    \n    //send invest write to contract\n    const { state, send} = useContractFunction(contract, 'invest', { transactionName: 'Invest' })\n    const { status } = state\n    const [investBNBamount, setInvestBNBamount] = useState('')\n    const writeInvestBNB = () => {\n        send({ value: utils.parseEther(investBNBamount) })\n    }\n    \n    \n    \n    //functions to grab data from contract and update interface\n    function getDAGamount() {\n        const { value, error } =\n            useCall(\n                {\n                    contract: contract, // instance of called contract\n                    method: 'getTotalDag', // Method to be called\n                    args: [], // Method arguments - address to be checked for power\n                }\n            ) ?? {};\n        if (error) {\n            console.error(error.message)\n            return undefined\n        }\n        //update dag meter\n    \n        const meterPerc = (value / 250000)\n        Object.assign(meterWidth, {wid:meterPerc*50+'%'} )\n       return value?.[0].toString()\n    }\n    const stakedDAGamount = getDAGamount()\n    const meterBar = React.createRef()\n\n                           \n                           \n  return (\n<section>\n  <Container maxWidth=\"md\" >\n          <Box px={6} pt={8} pb={6} textAlign=\"left\">\n      <Typography className={classes.heroTitle} variant=\"h3\" component=\"h2\" gutterBottom={true}>Accessible softnode ownership</Typography>\n      <Typography variant=\"body\" color=\"primary\">DAGNation provides the opportunity to benefit from the rewrds of node ownership on the Constellation Network. Nodes require 250k $DAG to be staked in them to earn rewards. With DAGNation, you can stake as little at .25 $BNB to participate.</Typography>\n    </Box>\n  </Container>\n  <Container maxWidth=\"md\" mt={4}>\n    <Box className={classes.panel} p={6}>\n\n      <Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">{stakedDAGamount}</Typography>\n      <Typography className={classes.nodeMeterTitleCont} variant=\"body\" color=\"primary\"> $DAG Staked</Typography>\n      <box component=\"div\" className={classes.nodeMeterCont}>\n        <box className={classes.nodeMeterBK}></box>\n          <box className={classes.nodeMeterProg} style={{width: meterWidth.wid}}></box>\n\n        <box component=\"div\" className={classes.nodeMeterTickCont}>\n          <box component=\"div\" className={classes.nodeMeterTick}></box>\n          <typography>250k $DAG</typography>\n          <typography>(node minimum)</typography>\n        </box>\n      </box>\n\n          <Box mt={4}><Typography variant=\"h3\" component=\"h2\">Buy $DAG and Stake</Typography></Box>\n          <Box my={2}>\n          <TextField style={{marginRight:\"20px\", top:\"2px\"}} size=\"small\" id=\"outlined-basic\"\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">$BNB</InputAdornment>,\n        }}\n          placeholder=\".25 Min\" variant=\"outlined\" onChange={event => setInvestBNBamount(event.target.value)} />\n          \n          \n          <Button variant=\"contained\" size=\"large\" onClick={() => writeInvestBNB()}>Buy and Stake</Button>\n          \n          </Box>\n      <Typography display='block' variant=\"body\" color=\"primary\">Your $BNB is swapped for $DAG and put into a queue to wait until the next Softnode epoch starts, where it will be staked in a Constellation Network Softnode. If at least 250,000 $DAG is staked before the epoch starts, produced rewards will be split among stakers per their percentage of the node.</Typography>\n    </Box>\n  </Container>\n    \n    <RewardsComponent />\n    <AdminComponent />\n    \n</section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}