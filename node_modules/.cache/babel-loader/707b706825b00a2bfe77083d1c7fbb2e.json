{"ast":null,"code":"import { validateArguments } from '../helpers/validateArgument';\nimport { useConfig, useNetwork } from '../providers';\nimport { useReadonlyNetwork } from './useReadonlyProvider';\n/**\n * @public\n */\n\nexport function useEthers() {\n  const {\n    network: {\n      provider: networkProvider,\n      chainId,\n      accounts,\n      errors\n    },\n    deactivate,\n    activate,\n    activateBrowserWallet,\n    isLoading\n  } = useNetwork();\n  const {\n    networks\n  } = useConfig();\n  const supportedChainIds = networks === null || networks === void 0 ? void 0 : networks.map(network => network.chainId);\n  const isUnsupportedChainId = chainId && supportedChainIds && supportedChainIds.indexOf(chainId) < 0;\n  const unsupportedChainIdError = new Error(`Unsupported chain id: ${chainId}. Supported chain ids are: ${supportedChainIds}.`);\n  unsupportedChainIdError.name = 'UnsupportedChainIdError';\n  const error = isUnsupportedChainId ? unsupportedChainIdError : errors[errors.length - 1];\n  const readonlyNetwork = useReadonlyNetwork();\n  const provider = networkProvider !== null && networkProvider !== void 0 ? networkProvider : readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.provider;\n\n  const switchNetwork = async chainId => {\n    validateArguments({\n      chainId\n    }, {\n      chainId: 'number'\n    });\n\n    if (!provider) {\n      throw new Error('Provider not connected.');\n    }\n\n    await provider.send('wallet_switchEthereumChain', [{\n      chainId: `0x${chainId.toString(16)}`\n    }]);\n  };\n\n  return {\n    connector: undefined,\n    library: provider,\n    chainId: isUnsupportedChainId ? undefined : networkProvider !== undefined ? chainId : readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.chainId,\n    account: accounts[0],\n    active: !!provider,\n    activate: async providerOrConnector => {\n      if ('getProvider' in providerOrConnector) {\n        console.warn('Using web3-react connectors is deprecated and may lead to unexpected behavior.');\n        await providerOrConnector.activate();\n        return activate(await providerOrConnector.getProvider());\n      }\n\n      return activate(providerOrConnector);\n    },\n    activateBrowserWallet,\n    deactivate,\n    setError: () => {\n      throw new Error('setError is deprecated');\n    },\n    error,\n    isLoading,\n    switchNetwork\n  };\n}","map":{"version":3,"mappings":"AACA,SAASA,iBAAT,QAAkC,6BAAlC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,cAAtC;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AAiCA;;;;AAGA,OAAM,SAAUC,SAAV,GAAmB;AACvB,QAAM;AACJC,WAAO,EAAE;AAAEC,cAAQ,EAAEC,eAAZ;AAA6BC,aAA7B;AAAsCC,cAAtC;AAAgDC;AAAhD,KADL;AAEJC,cAFI;AAGJC,YAHI;AAIJC,yBAJI;AAKJC;AALI,MAMFZ,UAAU,EANd;AAQA,QAAM;AAAEa;AAAF,MAAed,SAAS,EAA9B;AACA,QAAMe,iBAAiB,GAAGD,QAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEE,GAAV,CAAeZ,OAAD,IAAaA,OAAO,CAACG,OAAnC,CAA1B;AACA,QAAMU,oBAAoB,GAAGV,OAAO,IAAIQ,iBAAX,IAAgCA,iBAAiB,CAACG,OAAlB,CAA0BX,OAA1B,IAAqC,CAAlG;AACA,QAAMY,uBAAuB,GAAG,IAAIC,KAAJ,CAC9B,yBAAyBb,OAAO,8BAA8BQ,iBAAiB,GADjD,CAAhC;AAGAI,yBAAuB,CAACE,IAAxB,GAA+B,yBAA/B;AACA,QAAMC,KAAK,GAAGL,oBAAoB,GAAGE,uBAAH,GAA6BV,MAAM,CAACA,MAAM,CAACc,MAAP,GAAgB,CAAjB,CAArE;AAEA,QAAMC,eAAe,GAAGtB,kBAAkB,EAA1C;AACA,QAAMG,QAAQ,GAAGC,eAAe,SAAf,mBAAe,WAAf,qBAAoBkB,eAAe,SAAf,mBAAe,WAAf,GAAe,MAAf,kBAAe,CAAEnB,QAAtD;;AAEA,QAAMoB,aAAa,GAAG,MAAOlB,OAAP,IAA0B;AAC9CR,qBAAiB,CAAC;AAAEQ;AAAF,KAAD,EAAc;AAAEA,aAAO,EAAE;AAAX,KAAd,CAAjB;;AAEA,QAAI,CAACF,QAAL,EAAe;AACb,YAAM,IAAIe,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAED,UAAMf,QAAQ,CAACqB,IAAT,CAAc,4BAAd,EAA4C,CAAC;AAAEnB,aAAO,EAAE,KAAKA,OAAO,CAACoB,QAAR,CAAiB,EAAjB,CAAoB;AAApC,KAAD,CAA5C,CAAN;AACD,GARD;;AAUA,SAAO;AACLC,aAAS,EAAEC,SADN;AAELC,WAAO,EAAEzB,QAFJ;AAGLE,WAAO,EAAEU,oBAAoB,GAAGY,SAAH,GAAevB,eAAe,KAAKuB,SAApB,GAAgCtB,OAAhC,GAA0CiB,eAAe,SAAf,mBAAe,WAAf,GAAe,MAAf,kBAAe,CAAEjB,OAHlG;AAILwB,WAAO,EAAEvB,QAAQ,CAAC,CAAD,CAJZ;AAKLwB,UAAM,EAAE,CAAC,CAAC3B,QALL;AAMLM,YAAQ,EAAE,MAAOsB,mBAAP,IAAkD;AAC1D,UAAI,iBAAiBA,mBAArB,EAA0C;AACxCC,eAAO,CAACC,IAAR,CAAa,gFAAb;AACA,cAAMF,mBAAmB,CAACtB,QAApB,EAAN;AACA,eAAOA,QAAQ,CAAC,MAAMsB,mBAAmB,CAACG,WAApB,EAAP,CAAf;AACD;;AACD,aAAOzB,QAAQ,CAACsB,mBAAD,CAAf;AACD,KAbI;AAcLrB,yBAdK;AAeLF,cAfK;AAiBL2B,YAAQ,EAAE,MAAK;AACb,YAAM,IAAIjB,KAAJ,CAAU,wBAAV,CAAN;AACD,KAnBI;AAqBLE,SArBK;AAsBLT,aAtBK;AAwBLY;AAxBK,GAAP;AA0BD","names":["validateArguments","useConfig","useNetwork","useReadonlyNetwork","useEthers","network","provider","networkProvider","chainId","accounts","errors","deactivate","activate","activateBrowserWallet","isLoading","networks","supportedChainIds","map","isUnsupportedChainId","indexOf","unsupportedChainIdError","Error","name","error","length","readonlyNetwork","switchNetwork","send","toString","connector","undefined","library","account","active","providerOrConnector","console","warn","getProvider","setError"],"sources":["../../../../src/hooks/useEthers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}