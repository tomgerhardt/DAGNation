{"ast":null,"code":"import _slicedToArray from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useReducer } from 'react';\nimport pickBy from 'lodash.pickby';\nimport { DEFAULT_CONFIG } from '../../model/config/default';\nimport { ConfigContext } from './context';\nimport { configReducer } from './reducer';\n/**\n * We strip supplied config of undefined fields because it can easily break TS assumptions.\n *\n * Illustrative example:\n *\n * type FullConf = { something: string }\n * type PartConf = Partial<FullConf>\n *\n * const defaultConf: FullConf = { something: 'default' }\n * const suppliedConf: PartConf = { something: undefined }\n * const conf: FullConf = {...defaultConf, ...suppliedConf}\n * conf.something.toString() // OK according to TS, breaks on runtime.\n *\n * @internal Intended for internal use - use it on your own risk\n */\n\nvar noUndefined = function noUndefined(x) {\n  return x !== undefined;\n};\n\nexport function ConfigProvider(_ref) {\n  var config = _ref.config,\n      children = _ref.children;\n  var configWithDefaults = Object.assign(Object.assign(Object.assign({}, DEFAULT_CONFIG), pickBy(config, noUndefined)), {\n    notifications: Object.assign(Object.assign({}, DEFAULT_CONFIG.notifications), pickBy(config.notifications, noUndefined))\n  });\n\n  var _useReducer = useReducer(configReducer, configWithDefaults),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      reducedConfig = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return _jsx(ConfigContext.Provider, {\n    value: {\n      config: reducedConfig,\n      updateConfig: dispatch\n    },\n    children: children\n  });\n}","map":{"version":3,"mappings":";;AAAA,SAAoBA,UAApB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,aAAT,QAA8B,WAA9B;AAOA;;;;;;;;;;;;;;;;AAeA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD;AAAA,SAAYA,CAAC,KAAKC,SAAlB;AAAA,CAApB;;AACA,OAAM,SAAUC,cAAV,OAAkE;AAAA,MAAvCC,MAAuC,QAAvCA,MAAuC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AACtE,MAAMC,kBAAkB,iDACnBT,cADmB,GAEnBD,MAAM,CAACQ,MAAD,EAASJ,WAAT,CAFa,GAEQ;AAC9BO,iBAAa,kCACRV,cAAc,CAACU,aADP,GAERX,MAAM,CAACQ,MAAM,CAACG,aAAR,EAAuBP,WAAvB,CAFE;AADiB,GAFR,CAAxB;;AAQA,oBAAkCL,UAAU,CAACI,aAAD,EAAgBO,kBAAhB,CAA5C;AAAA;AAAA,MAAOE,aAAP;AAAA,MAAsBC,QAAtB;;AACA,SAAOC,KAACZ,aAAa,CAACa,QAAf,EAAuB;AAACC,SAAK,EAAE;AAAER,YAAM,EAAEI,aAAV;AAAyBK,kBAAY,EAAEJ;AAAvC,KAAR;AAA2DJ,YAAQ,EAAEA;AAArE,GAAvB,CAAP;AACD","names":["useReducer","pickBy","DEFAULT_CONFIG","ConfigContext","configReducer","noUndefined","x","undefined","ConfigProvider","config","children","configWithDefaults","notifications","reducedConfig","dispatch","_jsx","Provider","value","updateConfig"],"sources":["../../../../../src/providers/config/provider.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}