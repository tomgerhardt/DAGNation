{"ast":null,"code":"import _classCallCheck from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { BigNumber } from '@ethersproject/bignumber';\n/**\n * @public\n */\n\nexport var CurrencyValue = /*#__PURE__*/function () {\n  function CurrencyValue(currency, value) {\n    _classCallCheck(this, CurrencyValue);\n\n    this.currency = currency;\n    this.value = value;\n  }\n\n  _createClass(CurrencyValue, [{\n    key: \"toString\",\n    value: function toString() {\n      return this.value.toString();\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      var overrideOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.currency.format(this.value.toString(), overrideOptions);\n    }\n  }, {\n    key: \"checkCurrency\",\n    value: function checkCurrency(other) {\n      if (this.currency !== other.currency) {\n        throw new TypeError(\"Currency mismatch \".concat(this.currency.ticker, \" != \").concat(other.currency.ticker));\n      }\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      return new CurrencyValue(this.currency, fn(this.value));\n    }\n  }, {\n    key: \"add\",\n    value: function add(other) {\n      this.checkCurrency(other);\n      return this.map(function (x) {\n        return x.add(other.value);\n      });\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(other) {\n      this.checkCurrency(other);\n      return this.map(function (x) {\n        return x.sub(other.value);\n      });\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(value) {\n      return this.map(function (x) {\n        return x.mul(value);\n      });\n    }\n  }, {\n    key: \"div\",\n    value: function div(value) {\n      return this.map(function (x) {\n        return x.div(value);\n      });\n    }\n  }, {\n    key: \"mod\",\n    value: function mod(value) {\n      return this.map(function (x) {\n        return x.mod(value);\n      });\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return this.currency === other.currency && this.value.eq(other.value);\n    }\n  }, {\n    key: \"lt\",\n    value: function lt(other) {\n      this.checkCurrency(other);\n      return this.value.lt(other.value);\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(other) {\n      this.checkCurrency(other);\n      return this.value.lte(other.value);\n    }\n  }, {\n    key: \"gt\",\n    value: function gt(other) {\n      this.checkCurrency(other);\n      return this.value.gt(other.value);\n    }\n  }, {\n    key: \"gte\",\n    value: function gte(other) {\n      this.checkCurrency(other);\n      return this.value.gte(other.value);\n    }\n  }, {\n    key: \"isZero\",\n    value: function isZero() {\n      return this.value.isZero();\n    }\n  }], [{\n    key: \"fromString\",\n    value: function fromString(currency, value) {\n      return new CurrencyValue(currency, BigNumber.from(value));\n    }\n  }, {\n    key: \"zero\",\n    value: function zero(currency) {\n      return new CurrencyValue(currency, BigNumber.from(0));\n    }\n  }]);\n\n  return CurrencyValue;\n}();","map":{"version":3,"mappings":"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","names":["BigNumber","CurrencyValue","currency","value","toString","overrideOptions","format","other","TypeError","ticker","fn","checkCurrency","map","x","add","sub","mul","div","mod","eq","lt","lte","gt","gte","isZero","from"],"sources":["../../../../src/model/CurrencyValue.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}