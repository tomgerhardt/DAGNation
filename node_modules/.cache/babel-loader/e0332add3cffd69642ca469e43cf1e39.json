{"ast":null,"code":"import { Contract } from 'ethers';\nimport { ERC20Interface } from '../constants';\nimport { useCall } from './useCall';\n/**\n * @public\n */\n\nexport function useTokenAllowance(tokenAddress, ownerAddress, spenderAddress) {\n  var queryParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var _a;\n\n  var _ref = (_a = useCall(ownerAddress && spenderAddress && tokenAddress && {\n    contract: new Contract(tokenAddress, ERC20Interface),\n    method: 'allowance',\n    args: [ownerAddress, spenderAddress]\n  }, queryParams)) !== null && _a !== void 0 ? _a : {},\n      allowance = _ref.value;\n\n  return allowance === null || allowance === void 0 ? void 0 : allowance[0];\n}","map":{"version":3,"mappings":"AACA,SAASA,QAAT,QAAyB,QAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAGA,SAASC,OAAT,QAAwB,WAAxB;AAEA;;;;AAGA,OAAM,SAAUC,iBAAV,CACJC,YADI,EAEJC,YAFI,EAGJC,cAHI,EAIyB;AAAA,MAA7BC,WAA6B,uEAAF,EAAE;;;;AAE7B,aACE,aAAO,CACLF,YAAY,IACVC,cADF,IAEEF,YAFF,IAEkB;AACdI,YAAQ,EAAE,IAAIR,QAAJ,CAAaI,YAAb,EAA2BH,cAA3B,CADI;AAEdQ,UAAM,EAAE,WAFM;AAGdC,QAAI,EAAE,CAACL,YAAD,EAAeC,cAAf;AAHQ,GAHb,EAQLC,WARK,CAAP,MASC,IATD,IASCI,aATD,GASCA,EATD,GASK,EAVP;AAAA,MAAeC,SAAf,QAAQC,KAAR;;AAWA,SAAOD,SAAS,SAAT,aAAS,WAAT,GAAS,MAAT,YAAS,CAAG,CAAH,CAAhB;AACD","names":["Contract","ERC20Interface","useCall","useTokenAllowance","tokenAddress","ownerAddress","spenderAddress","queryParams","contract","method","args","_a","allowance","value"],"sources":["../../../../src/hooks/useTokenAllowance.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}