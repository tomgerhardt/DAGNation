{"ast":null,"code":"import { useReadonlyNetworks } from '../providers/network';\nimport { useChainId } from './useChainId';\n/**\n * Gets a readonly provider for specific chainId.\n * @param opts.chainId Requested chainId. If not provided, the currently connected wallet's chainId will be used or the default one from the config.\n * @returns An ethers.js provider or undefined.\n * @public\n */\n\nexport function useReadonlyNetwork() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var chainId = useChainId({\n    queryParams: {\n      chainId: opts.chainId\n    }\n  });\n  var providers = useReadonlyNetworks();\n  return providers[chainId] !== undefined && chainId !== undefined ? {\n    provider: providers[chainId],\n    chainId: chainId\n  } : undefined;\n}","map":{"version":3,"mappings":"AACA,SAASA,mBAAT,QAAoC,sBAApC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAYA;;;;;;;AAMA,OAAM,SAAUC,kBAAV,GAAkE;AAAA,MAArCC,IAAqC,uEAAF,EAAE;AACtE,MAAMC,OAAO,GAAGH,UAAU,CAAC;AAAEI,eAAW,EAAE;AAAED,aAAO,EAAED,IAAI,CAACC;AAAhB;AAAf,GAAD,CAA1B;AACA,MAAME,SAAS,GAAGN,mBAAmB,EAArC;AACA,SAAOM,SAAS,CAACF,OAAD,CAAT,KAAkCG,SAAlC,IAA+CH,OAAO,KAAKG,SAA3D,GACH;AACEC,YAAQ,EAAEF,SAAS,CAACF,OAAD,CADrB;AAEEA,WAAO,EAAEA;AAFX,GADG,GAKHG,SALJ;AAMD","names":["useReadonlyNetworks","useChainId","useReadonlyNetwork","opts","chainId","queryParams","providers","undefined","provider"],"sources":["../../../../src/hooks/useReadonlyProvider.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}