{"ast":null,"code":"import { createContext, useContext } from 'react';\nimport { DEFAULT_CONFIG } from '../../model/config/default';\nimport { getChainById } from '../../helpers/chain';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport var ConfigContext = createContext({\n  config: DEFAULT_CONFIG,\n  updateConfig: function updateConfig() {\n    return undefined;\n  }\n});\n\nvar validConfigs = function validConfigs(configs) {\n  if (!(configs === null || configs === void 0 ? void 0 : configs.networks) || (configs === null || configs === void 0 ? void 0 : configs.networks.length) === 0) {\n    console.warn('No networks or supportedChain configured');\n  }\n\n  return configs;\n};\n/**\n * @public\n */\n\n\nexport function useConfig() {\n  var _a;\n\n  var _useContext = useContext(ConfigContext),\n      config = _useContext.config; // backward compatible with supportedChains\n\n\n  if (config.supportedChains) {\n    console.warn('supportedChain is deprecated, please pass networks instead');\n    var networks = (_a = config.supportedChains) === null || _a === void 0 ? void 0 : _a.map(function (chainId) {\n      return getChainById(chainId);\n    });\n    return validConfigs(Object.assign(Object.assign({}, config), {\n      networks: networks\n    }));\n  }\n\n  return validConfigs(config);\n}\n/**\n * @public\n */\n\nexport function useUpdateConfig() {\n  var _useContext2 = useContext(ConfigContext),\n      updateConfig = _useContext2.updateConfig;\n\n  return updateConfig;\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AAEA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA;;;;AAGA,OAAO,IAAMC,aAAa,GAAGJ,aAAa,CAAiE;AACzGK,QAAM,EAAEH,cADiG;AAEzGI,cAAY,EAAE;AAAA,WAAMC,SAAN;AAAA;AAF2F,CAAjE,CAAnC;;AAKP,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAA4D;AAC/E,MAAI,EAACA,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEC,QAAV,KAAsB,QAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEA,QAAT,CAAkBC,MAAlB,MAA6B,CAAvD,EAA0D;AACxDC,WAAO,CAACC,IAAR,CAAa,0CAAb;AACD;;AACD,SAAOJ,OAAP;AACD,CALD;AAOA;;;;;AAGA,OAAM,SAAUK,SAAV,GAAmB;;;AACvB,oBAAmBb,UAAU,CAACG,aAAD,CAA7B;AAAA,MAAQC,MAAR,eAAQA,MAAR,CADuB,CAGvB;;;AACA,MAAIA,MAAM,CAACU,eAAX,EAA4B;AAC1BH,WAAO,CAACC,IAAR,CAAa,4DAAb;AACA,QAAMH,QAAQ,GAAY,YAAM,CAACK,eAAP,MAAsB,IAAtB,IAAsBC,aAAtB,GAAsB,MAAtB,GAAsBA,GAAEC,GAAF,CAAM,UAACC,OAAD;AAAA,aAAaf,YAAY,CAACe,OAAD,CAAzB;AAAA,KAAN,CAAhD;AACA,WAAOV,YAAY,iCACdH,MADc,GACR;AACTK,cAAQ,EAARA;AADS,KADQ,EAAnB;AAID;;AAED,SAAOF,YAAY,CAACH,MAAD,CAAnB;AACD;AAED;;;;AAGA,OAAM,SAAUc,eAAV,GAAyB;AAC7B,qBAAyBlB,UAAU,CAACG,aAAD,CAAnC;AAAA,MAAQE,YAAR,gBAAQA,YAAR;;AACA,SAAOA,YAAP;AACD","names":["createContext","useContext","DEFAULT_CONFIG","getChainById","ConfigContext","config","updateConfig","undefined","validConfigs","configs","networks","length","console","warn","useConfig","supportedChains","_a","map","chainId","useUpdateConfig"],"sources":["../../../../../src/providers/config/context.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}