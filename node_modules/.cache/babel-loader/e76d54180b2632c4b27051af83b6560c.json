{"ast":null,"code":"import _slicedToArray from\"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _defineProperty from\"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import React from'react';import{makeStyles}from'@material-ui/core/styles';import{emphasize,fade,darken,lighten}from'@material-ui/core/styles/colorManipulator';import clsx from'clsx';import Container from'@material-ui/core/Container';import Box from'@material-ui/core/Box';import Typography from'@material-ui/core/Typography';import TextField from'@material-ui/core/TextField';import InputAdornment from'@material-ui/core/InputAdornment';import Button from'@material-ui/core/Button';import{useEthers,AvalancheTestnet,useCall,useContractFunction}from\"@usedapp/core\";import{utils}from'ethers';import DAGNationABI from\"../DAGNationABI.json\";import{Contract}from'@ethersproject/contracts';import{useState}from\"react\";//setup smart contract interface\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DAGNationAddress='0x3efbCBfCE9E96b83C1c7f496e55D3792db5B0123';var DAGNInterface=new utils.Interface(DAGNationABI);var contract=new Contract(DAGNationAddress,DAGNInterface);var useStyles=makeStyles(function(theme){var _ref;return _ref={heroTitle:{textTransform:'uppercase'},panel:{backgroundColor:'black',opacity:'70%',borderRadius:'16px'},nodeMeterTitleCont:{display:'inline'},nodeMeterCont:{display:'block',position:'relative',height:'100px'},nodeMeterBK:{position:'absolute',width:'100%',height:'60px',backgroundColor:'#111',border:'2px solid',borderRight:'0',borderColor:'white',borderRadius:'8px',borderBottomRightRadius:'0',borderTopRightRadius:'0'},nodeMeterProg:{position:'absolute',backgroundColor:'red',height:'56px',top:'2px',left:'2px',borderRadius:'6px',borderBottomRightRadius:'0',borderTopRightRadius:'0'},nodeMeterTickCont:{position:'absolute',left:'50%',top:'70px'},nodeMeterTick:{position:'absolute',width:'2px',height:'20px',backgroundColor:'white',top:'-20px',left:'0px'},doublePanelCont:{height:'300px'},panelDetail:{backgroundColor:'black',opacity:'70%',borderRadius:'16px',height:'100%',width:'47%',display:'inline-block',marginTop:'20px',marginRight:'20px'},lineBreak:{height:'2px',width:'100%',backgroundColor:'white'},claimButton:{display:'block'},panelCont:{height:'300px',marginTop:'40px'}},_defineProperty(_ref,\"panel\",{backgroundColor:'black',opacity:'70%',borderRadius:'16px',height:'100%'}),_defineProperty(_ref,\"lineBreak\",{height:'2px',width:'100%',backgroundColor:'white'}),_ref;});var RewardsComponent=function RewardsComponent(){var classes=useStyles();var _useEthers=useEthers(),account=_useEthers.account;var isConnected=account!==undefined;//send claim write to contract\nvar _useContractFunction=useContractFunction(contract,'claimBusd',{transactionName:'Claim'}),state=_useContractFunction.state,send=_useContractFunction.send;var status=state.status;var writeClaimBUSD=function writeClaimBUSD(){send();};//grab wallet rewards amount\nfunction getRewardsAmount(){var _useCall;var _ref2=(_useCall=useCall({contract:contract,// instance of called contract\nmethod:'getHolderBusdAmount',// Method to be called\nargs:[account]// Method arguments - address to be checked\n}))!==null&&_useCall!==void 0?_useCall:{},value=_ref2.value,error=_ref2.error;if(error){console.error(error.message);return undefined;}return value===null||value===void 0?void 0:value[0].toString();}var rewardsAmount=getRewardsAmount()/1000000000000000000;//grab wallet rewards amount\nfunction getStakedAmount(){var _useCall2;var _ref3=(_useCall2=useCall({contract:contract,// instance of called contract\nmethod:'getHolderAmountInPool',// Method to be called\nargs:[account]// Method arguments - address to be checked\n}))!==null&&_useCall2!==void 0?_useCall2:{},value=_ref3.value,error=_ref3.error;if(error){console.error(error.message);return undefined;}return value===null||value===void 0?void 0:value[0].toString();}var stakedAmount=getStakedAmount();return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",mt:4,className:classes.doublePanelCont,children:[/*#__PURE__*/_jsxs(Box,{className:classes.panelDetail,p:6,children:[/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:\"My Rewards\"}),/*#__PURE__*/_jsx(Box,{className:classes.lineBreak}),/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:rewardsAmount}),/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"body\",color:\"secondary\",children:\"$BUSD\"}),/*#__PURE__*/_jsx(Button,{className:classes.claimButton,variant:\"contained\",size:\"large\",onClick:function onClick(){return writeClaimBUSD();},children:\"Claim\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",status]})]}),/*#__PURE__*/_jsxs(Box,{className:classes.panelDetail,p:6,children:[/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:\"My Stake\"}),/*#__PURE__*/_jsx(Box,{className:classes.lineBreak}),/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:stakedAmount}),/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"body\",color:\"secondary\",children:\"0% of Total\"})]})]});};var AdminComponent=function AdminComponent(){var classes=useStyles();var _useEthers2=useEthers(),account=_useEthers2.account;var isConnected=account!==undefined;//see if wallet is admin\nfunction getAdminStatus(){var _useCall3;var _ref4=(_useCall3=useCall({contract:contract,// instance of called contract\nmethod:'checkAdmin',// Method to be called\nargs:[account]// Method arguments - address to be checked\n}))!==null&&_useCall3!==void 0?_useCall3:{},value=_ref4.value,error=_ref4.error;if(error){console.error(error.message);return undefined;}return value===null||value===void 0?void 0:value[0].toString();}var isAdmin=getAdminStatus();return/*#__PURE__*/_jsx(\"div\",{children:isAdmin?/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",mt:4,className:classes.panelCont,children:/*#__PURE__*/_jsxs(Box,{className:classes.panel,p:6,children:[/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:\"Admin\"}),/*#__PURE__*/_jsx(Box,{className:classes.lineBreak})]})}):/*#__PURE__*/_jsx(\"div\",{})});};export default function Component(props){var classes=useStyles();var meterWidth=Object.assign({wid:'0%'});var _useEthers3=useEthers(),account=_useEthers3.account;var isConnected=account!==undefined;//send invest write to contract\nvar _useContractFunction2=useContractFunction(contract,'invest',{transactionName:'Invest'}),state=_useContractFunction2.state,send=_useContractFunction2.send;var status=state.status;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),investBNBamount=_useState2[0],setInvestBNBamount=_useState2[1];var writeInvestBNB=function writeInvestBNB(){send({value:utils.parseEther(investBNBamount)});};//functions to grab data from contract and update interface\nfunction getDAGamount(){var _useCall4;var _ref5=(_useCall4=useCall({contract:contract,// instance of called contract\nmethod:'getTotalDag',// Method to be called\nargs:[]// Method arguments - address to be checked for power\n}))!==null&&_useCall4!==void 0?_useCall4:{},value=_ref5.value,error=_ref5.error;if(error){console.error(error.message);return undefined;}//update dag meter\nvar meterPerc=value/250000;Object.assign(meterWidth,{wid:meterPerc*50+'%'});return value===null||value===void 0?void 0:value[0].toString();}var stakedDAGamount=getDAGamount();var meterBar=/*#__PURE__*/React.createRef();return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",children:/*#__PURE__*/_jsxs(Box,{py:8,textAlign:\"left\",children:[/*#__PURE__*/_jsx(Typography,{className:classes.heroTitle,variant:\"h3\",component:\"h2\",gutterBottom:true,children:\"Accessible softnode ownership\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body\",color:\"secondary\",children:\"DAGNation provides the opportunity to benefit from the rewrds of node ownership on the Constellation Network. Nodes require 250k $DAG to be staked in them to earn rewards. With DADNation, you can stake as little at .25BNB to participate.\"})]})}),/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",mt:4,children:/*#__PURE__*/_jsxs(Box,{className:classes.panel,p:6,children:[/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"h3\",component:\"h2\",children:stakedDAGamount}),/*#__PURE__*/_jsx(Typography,{className:classes.nodeMeterTitleCont,variant:\"body\",color:\"secondary\",children:\"$DAG Staked\"}),/*#__PURE__*/_jsxs(\"box\",{component:\"div\",className:classes.nodeMeterCont,children:[/*#__PURE__*/_jsx(\"box\",{className:classes.nodeMeterBK}),/*#__PURE__*/_jsx(\"box\",{className:classes.nodeMeterProg,style:{width:meterWidth.wid}}),/*#__PURE__*/_jsxs(\"box\",{component:\"div\",className:classes.nodeMeterTickCont,children:[/*#__PURE__*/_jsx(\"box\",{component:\"div\",className:classes.nodeMeterTick}),/*#__PURE__*/_jsx(\"typography\",{children:\"250k $DAG\"}),/*#__PURE__*/_jsx(\"typography\",{children:\"(node minimum)\"})]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h3\",component:\"h2\",children:\"+ Add to Node\"}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:\"$BNB\"})},placeholder:\".25 Min\",variant:\"outlined\",onChange:function onChange(event){return setInvestBNBamount(event.target.value);}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"large\",onClick:function onClick(){return writeInvestBNB();},children:\"Add\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",status]}),/*#__PURE__*/_jsx(Typography,{display:\"block\",variant:\"body\",color:\"secondary\",children:\"Staked $BNB is swapped for $DAG and locked into a Constellation Network Softnode. Staked value will not be availible for withdrawl until Constellation Network Mainnet launches in Q3 2022, and at the end of the Softnode Period. If at least 250,000 $DAG is staked before the locking period, produced rewards will be split amoung stakers per their percentage of the node.\"})]})}),/*#__PURE__*/_jsx(RewardsComponent,{}),/*#__PURE__*/_jsx(AdminComponent,{})]});}","map":{"version":3,"sources":["/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/src/components-custom/CallToActionCustom2.js"],"names":["React","makeStyles","emphasize","fade","darken","lighten","clsx","Container","Box","Typography","TextField","InputAdornment","Button","useEthers","AvalancheTestnet","useCall","useContractFunction","utils","DAGNationABI","Contract","useState","DAGNationAddress","DAGNInterface","Interface","contract","useStyles","theme","heroTitle","textTransform","panel","backgroundColor","opacity","borderRadius","nodeMeterTitleCont","display","nodeMeterCont","position","height","nodeMeterBK","width","border","borderRight","borderColor","borderBottomRightRadius","borderTopRightRadius","nodeMeterProg","top","left","nodeMeterTickCont","nodeMeterTick","doublePanelCont","panelDetail","marginTop","marginRight","lineBreak","claimButton","panelCont","RewardsComponent","classes","account","isConnected","undefined","transactionName","state","send","status","writeClaimBUSD","getRewardsAmount","method","args","value","error","console","message","toString","rewardsAmount","getStakedAmount","stakedAmount","AdminComponent","getAdminStatus","isAdmin","Component","props","meterWidth","Object","assign","wid","investBNBamount","setInvestBNBamount","writeInvestBNB","parseEther","getDAGamount","meterPerc","stakedDAGamount","meterBar","createRef","startAdornment","event","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { emphasize, fade, darken, lighten } from '@material-ui/core/styles/colorManipulator';\n\nimport clsx from 'clsx';\n\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\n\nimport { useEthers, AvalancheTestnet, useCall, useContractFunction } from \"@usedapp/core\"\nimport { utils } from 'ethers'\nimport DAGNationABI from \"../DAGNationABI.json\"\nimport { Contract } from '@ethersproject/contracts'\nimport { useState } from \"react\"\n\n\n//setup smart contract interface\nconst DAGNationAddress = '0x3efbCBfCE9E96b83C1c7f496e55D3792db5B0123'\nconst DAGNInterface = new utils.Interface(DAGNationABI)\nconst contract = new Contract(DAGNationAddress, DAGNInterface)\n\nconst useStyles = makeStyles((theme) => ({\n  heroTitle:{\n    textTransform: 'uppercase',\n  },\n  panel:{\n    backgroundColor:  'black',\n    opacity:'70%',\n    borderRadius:'16px'\n  },\n    \n    \n  nodeMeterTitleCont:{\n    display:'inline',\n  },\n  nodeMeterCont:{\n    display:'block',\n \tposition:'relative',  \n      height:'100px',\n  },\n  nodeMeterBK:{\n    position:'absolute',\n    width:'100%',\n    height:'60px',\n    backgroundColor:'#111',\n    border:'2px solid',\n    borderRight:'0',\n    borderColor:'white',\n    borderRadius:'8px',\n    borderBottomRightRadius:'0',\n    borderTopRightRadius:'0',\n  },\n  nodeMeterProg:{\n    position:'absolute',\n    backgroundColor:'red',\n    \n    height:'56px',\n    top:'2px',\n    left:'2px',\n    borderRadius:'6px',\n    borderBottomRightRadius:'0',\n    borderTopRightRadius:'0',\n  },\n    \n  nodeMeterTickCont:{\n    position:'absolute',\n    left:'50%',\n    top: '70px',\n  },\n  nodeMeterTick:{\n    position:'absolute',\n    width:'2px',\n    height:'20px',\n    backgroundColor:'white',\n      top:'-20px',\n        left:'0px'\n  },\n    doublePanelCont:{\n      height: '300px',\n    },\n    panelDetail:{\n      backgroundColor:  'black',\n      opacity:'70%',\n      borderRadius:'16px',\n      height: '100%',\n      width: '47%',\n      display:'inline-block',\n        marginTop:'20px',\n          marginRight:'20px'\n    },\n    lineBreak:{\n      height:'2px',\n      width:'100%',\n      backgroundColor:'white'\n    },\n    claimButton:{\n      display:'block',\n      \n    },\n    panelCont:{\n    height: '300px',\n      marginTop:'40px',\n    },\n      panel:{\n      backgroundColor:  'black',\n      opacity:'70%',\n      borderRadius:'16px',\n      height: '100%',\n     \n    },\n    lineBreak:{\n    height:'2px',\n    width:'100%',\n    backgroundColor:'white'\n    },\n}\n));\n\n\n\n\n\n\nconst RewardsComponent = () => {\n    \n    const classes = useStyles();\n    \n    const { account } = useEthers()\n    const isConnected = account !== undefined\n    \n    //send claim write to contract\n    const { state, send } = useContractFunction(contract, 'claimBusd', { transactionName: 'Claim' })\n    const { status } = state\n    const writeClaimBUSD = () => {\n        send()\n    }\n    \n    //grab wallet rewards amount\n    function getRewardsAmount() {\n       const { value, error } =\n           useCall(\n               {\n                   contract: contract, // instance of called contract\n                   method: 'getHolderBusdAmount', // Method to be called\n                   args: [account], // Method arguments - address to be checked\n               }\n           ) ?? {};\n       if (error) {\n           console.error(error.message)\n           return undefined\n       }\n       return value?.[0].toString()\n    }\n    const rewardsAmount = getRewardsAmount()  / 1000000000000000000\n                           \n    //grab wallet rewards amount\n    function getStakedAmount() {\n      const { value, error } =\n          useCall(\n              {\n                  contract: contract, // instance of called contract\n                  method: 'getHolderAmountInPool', // Method to be called\n                  args: [account], // Method arguments - address to be checked\n              }\n          ) ?? {};\n      if (error) {\n          console.error(error.message)\n          return undefined\n      }\n      return value?.[0].toString()\n    }\n    const stakedAmount = getStakedAmount()\n    \n    return (\n        <Container maxWidth=\"md\" mt={4} className={classes.doublePanelCont}>\n        <Box className={classes.panelDetail} p={6}>\n          <Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">My Rewards</Typography>\n          <Box className={classes.lineBreak}></Box>\n          <Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">{rewardsAmount}</Typography>\n          <Typography className={classes.nodeMeterTitleCont} variant=\"body\" color=\"secondary\">$BUSD</Typography>\n              <Button className={classes.claimButton} variant=\"contained\" size=\"large\" onClick={() => writeClaimBUSD()}>Claim</Button>\n            <p>Status: {status}</p>\n        </Box>\n        <Box className={classes.panelDetail} p={6}>\n          <Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">My Stake</Typography>\n          <Box className={classes.lineBreak}></Box>\n          <Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">{stakedAmount}</Typography>\n          <Typography className={classes.nodeMeterTitleCont} variant=\"body\" color=\"secondary\">0% of Total</Typography>\n        </Box>\n        </Container>\n    )\n}\n\n\n\n\n\n\nconst AdminComponent = () => {\n    \n    const classes = useStyles();\n    \n    const { account } = useEthers()\n    const isConnected = account !== undefined\n    \n    //see if wallet is admin\n    function getAdminStatus() {\n       const { value, error } =\n           useCall(\n               {\n                   contract: contract, // instance of called contract\n                   method: 'checkAdmin', // Method to be called\n                   args: [account], // Method arguments - address to be checked\n               }\n           ) ?? {};\n       if (error) {\n           console.error(error.message)\n           return undefined\n       }\n       return value?.[0].toString()\n    }\n    const isAdmin = getAdminStatus()\n\n    return (\n            <div>\n                {isAdmin ?\n                <Container maxWidth=\"md\" mt={4} className={classes.panelCont}>\n                <Box className={classes.panel} p={6}>\n                  <Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">Admin</Typography>\n                  <Box className={classes.lineBreak}></Box>\n                </Box>\n                </Container>\n                : <div></div> }\n            </div>\n    )\n}\n\n\n\n\n\n\nexport default function Component(props) {\n  const classes = useStyles();\n    \n    const meterWidth = Object.assign({wid:'0%'});\n    \n    const { account } = useEthers()\n    const isConnected = account !== undefined\n    \n    \n    \n    //send invest write to contract\n    const { state, send} = useContractFunction(contract, 'invest', { transactionName: 'Invest' })\n    const { status } = state\n    const [investBNBamount, setInvestBNBamount] = useState('')\n    const writeInvestBNB = () => {\n        send({ value: utils.parseEther(investBNBamount) })\n    }\n    \n    \n    \n    //functions to grab data from contract and update interface\n    function getDAGamount() {\n        const { value, error } =\n            useCall(\n                {\n                    contract: contract, // instance of called contract\n                    method: 'getTotalDag', // Method to be called\n                    args: [], // Method arguments - address to be checked for power\n                }\n            ) ?? {};\n        if (error) {\n            console.error(error.message)\n            return undefined\n        }\n        //update dag meter\n    \n        const meterPerc = (value / 250000)\n        Object.assign(meterWidth, {wid:meterPerc*50+'%'} )\n        return value?.[0].toString()\n    }\n    const stakedDAGamount = getDAGamount()\n    const meterBar = React.createRef()\n                           \n    \n                           \n                           \n  return (\n<section>\n  <Container maxWidth=\"md\" >\n    <Box py={8} textAlign=\"left\">\n      <Typography className={classes.heroTitle} variant=\"h3\" component=\"h2\" gutterBottom={true}>Accessible softnode ownership</Typography>\n      <Typography variant=\"body\" color=\"secondary\">DAGNation provides the opportunity to benefit from the rewrds of node ownership on the Constellation Network. Nodes require 250k $DAG to be staked in them to earn rewards. With DADNation, you can stake as little at .25BNB to participate.</Typography>\n    </Box>\n  </Container>\n  <Container maxWidth=\"md\" mt={4}>\n    <Box className={classes.panel} p={6}>\n\n      <Typography className={classes.nodeMeterTitleCont} variant=\"h3\" component=\"h2\">{stakedDAGamount}</Typography>\n      <Typography className={classes.nodeMeterTitleCont} variant=\"body\" color=\"secondary\">$DAG Staked</Typography>\n      <box component=\"div\" className={classes.nodeMeterCont}>\n        <box className={classes.nodeMeterBK}></box>\n          <box className={classes.nodeMeterProg} style={{width: meterWidth.wid}}></box>\n\n        <box component=\"div\" className={classes.nodeMeterTickCont}>\n          <box component=\"div\" className={classes.nodeMeterTick}></box>\n          <typography>250k $DAG</typography>\n          <typography>(node minimum)</typography>\n        </box>\n      </box>\n\n      <Typography variant=\"h3\" component=\"h2\">+ Add to Node</Typography>\n      <TextField id=\"outlined-basic\" \n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">$BNB</InputAdornment>,\n        }}\n          placeholder=\".25 Min\" variant=\"outlined\" onChange={event => setInvestBNBamount(event.target.value)} />\n          \n          \n          <Button variant=\"contained\" size=\"large\" onClick={() => writeInvestBNB()}>Add</Button>\n          <p>Status: {status}</p>\n          \n      <Typography display='block' variant=\"body\" color=\"secondary\">Staked $BNB is swapped for $DAG and locked into a Constellation Network Softnode. Staked value will not be availible for withdrawl until Constellation Network Mainnet launches in Q3 2022, and at the end of the Softnode Period. If at least 250,000 $DAG is staked before the locking period, produced rewards will be split amoung stakers per their percentage of the node.</Typography>\n    </Box>\n  </Container>\n    \n    <RewardsComponent />\n    <AdminComponent />\n    \n</section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}