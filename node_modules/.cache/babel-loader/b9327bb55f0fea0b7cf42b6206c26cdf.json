{"ast":null,"code":"import { useEffect, useState } from 'react'; // modified from https://usehooks.com/useDebounce/\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function useDebouncePair(first, second, delay) {\n  const [debouncedValue, setDebouncedValue] = useState([first, second]);\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue([first, second]);\n    }, delay); // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [first, second, delay]);\n  return debouncedValue;\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AACA;;;;AAGA,OAAM,SAAUC,eAAV,CAAgCC,KAAhC,EAA0CC,MAA1C,EAAqDC,KAArD,EAAkE;AACtE,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAS,CAACE,KAAD,EAAQC,MAAR,CAAT,CAApD;AAEAJ,WAAS,CAAC,MAAK;AACb;AACA,UAAMQ,OAAO,GAAGC,UAAU,CAAC,MAAK;AAC9BF,uBAAiB,CAAC,CAACJ,KAAD,EAAQC,MAAR,CAAD,CAAjB;AACD,KAFyB,EAEvBC,KAFuB,CAA1B,CAFa,CAMb;AACA;AACA;;AACA,WAAO,MAAK;AACVK,kBAAY,CAACF,OAAD,CAAZ;AACD,KAFD;AAGD,GAZQ,EAYN,CAACL,KAAD,EAAQC,MAAR,EAAgBC,KAAhB,CAZM,CAAT;AAcA,SAAOC,cAAP;AACD","names":["useEffect","useState","useDebouncePair","first","second","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sources":["../../../../src/hooks/useDebouncePair.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}