{"ast":null,"code":"import { MultiCallABI } from '../constants';\nimport { useMulticallAddress } from './useMulticallAddress';\nimport { useCall } from './useCall';\nimport { Contract } from 'ethers';\n/**\n * @public\n */\n\nexport function useEtherBalance(address) {\n  var queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _a;\n\n  var multicallAddress = useMulticallAddress(queryParams);\n\n  var _ref = (_a = useCall(multicallAddress && address && {\n    contract: new Contract(multicallAddress, MultiCallABI),\n    method: 'getEthBalance',\n    args: [address]\n  }, queryParams)) !== null && _a !== void 0 ? _a : {},\n      value = _ref.value;\n\n  return value === null || value === void 0 ? void 0 : value[0];\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,cAA7B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAIA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA;;;;AAGA,OAAM,SAAUC,eAAV,CAA0BC,OAA1B,EAAgF;AAAA,MAA7BC,WAA6B,uEAAF,EAAE;;;;AACpF,MAAMC,gBAAgB,GAAGN,mBAAmB,CAACK,WAAD,CAA5C;;AACA,aACE,aAAO,CACLC,gBAAgB,IACdF,OADF,IACa;AACTG,YAAQ,EAAE,IAAIL,QAAJ,CAAaI,gBAAb,EAA+BP,YAA/B,CADD;AAETS,UAAM,EAAE,eAFC;AAGTC,QAAI,EAAE,CAACL,OAAD;AAHG,GAFR,EAOLC,WAPK,CAAP,MAQC,IARD,IAQCK,aARD,GAQCA,EARD,GAQK,EATP;AAAA,MAAeC,KAAf,QAAQA,KAAR;;AAUA,SAAOA,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAG,CAAH,CAAZ;AACD","names":["MultiCallABI","useMulticallAddress","useCall","Contract","useEtherBalance","address","queryParams","multicallAddress","contract","method","args","_a","value"],"sources":["../../../../src/hooks/useEtherBalance.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}