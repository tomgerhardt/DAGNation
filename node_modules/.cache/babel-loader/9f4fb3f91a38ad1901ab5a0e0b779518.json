{"ast":null,"code":"import _asyncToGenerator from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/regenerator/index.js\";\nimport { useCallback, useState } from 'react';\nimport { useNotificationsContext, useTransactionsContext } from '../providers';\nimport { errors } from 'ethers';\n\nvar isDroppedAndReplaced = function isDroppedAndReplaced(e) {\n  return (e === null || e === void 0 ? void 0 : e.code) === errors.TRANSACTION_REPLACED && (e === null || e === void 0 ? void 0 : e.replacement) && ((e === null || e === void 0 ? void 0 : e.reason) === 'repriced' || (e === null || e === void 0 ? void 0 : e.cancelled) === false);\n};\n\nexport function usePromiseTransaction(chainId, options) {\n  var _useState = useState({\n    status: 'None'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useTransactionsConte = useTransactionsContext(),\n      addTransaction = _useTransactionsConte.addTransaction;\n\n  var _useNotificationsCont = useNotificationsContext(),\n      addNotification = _useNotificationsCont.addNotification;\n\n  var resetState = useCallback(function () {\n    setState({\n      status: 'None'\n    });\n  }, [setState]);\n  var promiseTransaction = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(transactionPromise) {\n      var _a, _b, _c, _d, _e, _f, transaction, receipt, errorMessage, droppedAndReplaced, status, type;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (chainId) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              transaction = undefined;\n              _context.prev = 3;\n              setState({\n                status: 'PendingSignature',\n                chainId: chainId\n              });\n              _context.next = 7;\n              return transactionPromise;\n\n            case 7:\n              transaction = _context.sent;\n              setState({\n                transaction: transaction,\n                status: 'Mining',\n                chainId: chainId\n              });\n              addTransaction({\n                transaction: Object.assign(Object.assign({}, transaction), {\n                  chainId: chainId\n                }),\n                submittedAt: Date.now(),\n                transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n              });\n              _context.next = 12;\n              return transaction.wait();\n\n            case 12:\n              receipt = _context.sent;\n              setState({\n                receipt: receipt,\n                transaction: transaction,\n                status: 'Success',\n                chainId: chainId\n              });\n              return _context.abrupt(\"return\", receipt);\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](3);\n              errorMessage = (_e = (_c = (_b = (_a = _context.t0.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : _context.t0.reason) !== null && _c !== void 0 ? _c : (_d = _context.t0.data) === null || _d === void 0 ? void 0 : _d.message) !== null && _e !== void 0 ? _e : _context.t0.message;\n\n              if (transaction) {\n                droppedAndReplaced = isDroppedAndReplaced(_context.t0);\n\n                if (droppedAndReplaced) {\n                  status = _context.t0.receipt.status === 0 ? 'Fail' : 'Success';\n                  type = status === 'Fail' ? 'transactionFailed' : 'transactionSucceed';\n                  addNotification({\n                    notification: {\n                      type: type,\n                      submittedAt: Date.now(),\n                      transaction: _context.t0.replacement,\n                      receipt: _context.t0.receipt,\n                      transactionName: (_f = _context.t0.replacement) === null || _f === void 0 ? void 0 : _f.transactionName,\n                      originalTransaction: transaction\n                    },\n                    chainId: chainId\n                  });\n                  setState({\n                    status: status,\n                    transaction: _context.t0.replacement,\n                    originalTransaction: transaction,\n                    receipt: _context.t0.receipt,\n                    errorMessage: errorMessage,\n                    chainId: chainId\n                  });\n                } else {\n                  setState({\n                    status: 'Fail',\n                    transaction: transaction,\n                    receipt: _context.t0.receipt,\n                    errorMessage: errorMessage,\n                    chainId: chainId\n                  });\n                }\n              } else {\n                setState({\n                  status: 'Exception',\n                  errorMessage: errorMessage,\n                  chainId: chainId\n                });\n              }\n\n              return _context.abrupt(\"return\", undefined);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 17]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [chainId, setState, addTransaction, options]);\n  return {\n    promiseTransaction: promiseTransaction,\n    state: state,\n    resetState: resetState\n  };\n}","map":{"version":3,"mappings":"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","names":["useCallback","useState","useNotificationsContext","useTransactionsContext","errors","isDroppedAndReplaced","e","code","TRANSACTION_REPLACED","replacement","reason","cancelled","usePromiseTransaction","chainId","options","status","state","setState","addTransaction","addNotification","resetState","promiseTransaction","transactionPromise","transaction","undefined","submittedAt","Date","now","transactionName","wait","receipt","errorMessage","error","_a","message","_b","_c","data","_d","_e","droppedAndReplaced","type","notification","_f","originalTransaction"],"sources":["../../../../src/hooks/usePromiseTransaction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}