{"ast":null,"code":"import _asyncToGenerator from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/regenerator/index.js\";\nimport { Web3Provider } from '@ethersproject/providers';\nimport detectEthereumProvider from '@metamask/detect-provider';\nexport function getInjectedProvider(_x) {\n  return _getInjectedProvider.apply(this, arguments);\n}\n\nfunction _getInjectedProvider() {\n  _getInjectedProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pollingInterval) {\n    var injectedProvider, provider;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return detectEthereumProvider();\n\n          case 2:\n            injectedProvider = _context.sent;\n\n            if (injectedProvider) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", undefined);\n\n          case 5:\n            provider = new Web3Provider(injectedProvider, 'any');\n            provider.pollingInterval = pollingInterval;\n            return _context.abrupt(\"return\", provider);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getInjectedProvider.apply(this, arguments);\n}","map":{"version":3,"mappings":";;AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AAEA,gBAAsBC,mBAAtB;AAAA;AAAA;;;kFAAO,iBAAmCC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC+BF,sBAAsB,EADrD;;AAAA;AACCG,4BADD;;AAAA,gBAEAA,gBAFA;AAAA;AAAA;AAAA;;AAAA,6CAGIC,SAHJ;;AAAA;AAMCC,oBAND,GAMY,IAAIN,YAAJ,CAAiBI,gBAAjB,EAAmC,KAAnC,CANZ;AAOLE,oBAAQ,CAACH,eAAT,GAA2BA,eAA3B;AAPK,6CAQEG,QARF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","names":["Web3Provider","detectEthereumProvider","getInjectedProvider","pollingInterval","injectedProvider","undefined","provider"],"sources":["../../../../src/helpers/injectedProvider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}