{"ast":null,"code":"import _toConsumableArray from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/regenerator/index.js\";\nimport { useCallback, useState } from 'react';\nimport { useEthers } from './useEthers';\nimport { usePromiseTransaction } from './usePromiseTransaction';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function connectContractToSigner(contract, options, library) {\n  if (contract.signer) {\n    return contract;\n  }\n\n  if (options === null || options === void 0 ? void 0 : options.signer) {\n    return contract.connect(options.signer);\n  }\n\n  if (library === null || library === void 0 ? void 0 : library.getSigner()) {\n    return contract.connect(library.getSigner());\n  }\n\n  throw new TypeError('No signer available in contract, options or library');\n}\n/**\n * @public\n */\n\nexport function useContractFunction(contract, functionName, options) {\n  var _useEthers = useEthers(),\n      library = _useEthers.library,\n      chainId = _useEthers.chainId;\n\n  var _usePromiseTransactio = usePromiseTransaction(chainId, options),\n      promiseTransaction = _usePromiseTransactio.promiseTransaction,\n      state = _usePromiseTransactio.state,\n      resetState = _usePromiseTransactio.resetState;\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      events = _useState2[0],\n      setEvents = _useState2[1];\n\n  var send = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var contractWithSigner,\n        receipt,\n        _events,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            contractWithSigner = connectContractToSigner(contract, options, library);\n            _context.next = 3;\n            return promiseTransaction(contractWithSigner[functionName].apply(contractWithSigner, _args));\n\n          case 3:\n            receipt = _context.sent;\n\n            if (receipt === null || receipt === void 0 ? void 0 : receipt.logs) {\n              _events = receipt.logs.reduce(function (accumulatedLogs, log) {\n                try {\n                  return log.address.toLowerCase() === contract.address.toLowerCase() ? [].concat(_toConsumableArray(accumulatedLogs), [contract.interface.parseLog(log)]) : accumulatedLogs;\n                } catch (_err) {\n                  return accumulatedLogs;\n                }\n              }, []);\n              setEvents(_events);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [contract, functionName, options, library]);\n  return {\n    send: send,\n    state: state,\n    events: events,\n    resetState: resetState\n  };\n}","map":{"version":3,"mappings":";;;;AAGA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AAIA;;;;AAGA,OAAM,SAAUC,uBAAV,CAAkCC,QAAlC,EAAsDC,OAAtD,EAAoFC,OAApF,EAA6G;AACjH,MAAIF,QAAQ,CAACG,MAAb,EAAqB;AACnB,WAAOH,QAAP;AACD;;AAED,MAAIC,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEE,MAAb,EAAqB;AACnB,WAAOH,QAAQ,CAACI,OAAT,CAAiBH,OAAO,CAACE,MAAzB,CAAP;AACD;;AAED,MAAID,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEG,SAAT,EAAJ,EAA0B;AACxB,WAAOL,QAAQ,CAACI,OAAT,CAAiBF,OAAO,CAACG,SAAR,EAAjB,CAAP;AACD;;AAED,QAAM,IAAIC,SAAJ,CAAc,qDAAd,CAAN;AACD;AAED;;;;AAGA,OAAM,SAAUC,mBAAV,CACJP,QADI,EAEJQ,YAFI,EAGJP,OAHI,EAGwB;AAE5B,mBAA6BJ,SAAS,EAAtC;AAAA,MAAQK,OAAR,cAAQA,OAAR;AAAA,MAAiBO,OAAjB,cAAiBA,OAAjB;;AACA,8BAAkDX,qBAAqB,CAACW,OAAD,EAAUR,OAAV,CAAvE;AAAA,MAAQS,kBAAR,yBAAQA,kBAAR;AAAA,MAA4BC,KAA5B,yBAA4BA,KAA5B;AAAA,MAAmCC,UAAnC,yBAAmCA,UAAnC;;AACA,kBAA4BhB,QAAQ,CAA+BiB,SAA/B,CAApC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,IAAI,GAAGrB,WAAW,wEACtB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACQsB,8BADR,GAC6BlB,uBAAuB,CAACC,QAAD,EAAWC,OAAX,EAAoBC,OAApB,CADpD;AAAA;AAAA,mBAEwBQ,kBAAkB,CAACO,kBAAkB,CAACT,YAAD,CAAlB,yBAAkB,QAAnB,CAF1C;;AAAA;AAEQU,mBAFR;;AAGE,gBAAIA,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEC,IAAb,EAAmB;AACXL,qBADW,GACFI,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoB,UAACC,eAAD,EAAkBC,GAAlB,EAAyB;AAC1D,oBAAI;AACF,yBAAOA,GAAG,CAACC,OAAJ,CAAYC,WAAZ,OAA8BxB,QAAQ,CAACuB,OAAT,CAAiBC,WAAjB,EAA9B,gCACCH,eADD,IACkBrB,QAAQ,CAACyB,SAAT,CAAmBC,QAAnB,CAA4BJ,GAA5B,CADlB,KAEHD,eAFJ;AAGD,iBAJD,CAIE,OAAOM,IAAP,EAAa;AACb,yBAAON,eAAP;AACD;AACF,eARc,EAQZ,EARY,CADE;AAUjBN,uBAAS,CAACD,OAAD,CAAT;AACD;;AAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADsB,IAiBtB,CAACd,QAAD,EAAWQ,YAAX,EAAyBP,OAAzB,EAAkCC,OAAlC,CAjBsB,CAAxB;AAoBA,SAAO;AAAEc,QAAI,EAAJA,IAAF;AAAQL,SAAK,EAALA,KAAR;AAAeG,UAAM,EAANA,MAAf;AAAuBF,cAAU,EAAVA;AAAvB,GAAP;AACD","names":["useCallback","useState","useEthers","usePromiseTransaction","connectContractToSigner","contract","options","library","signer","connect","getSigner","TypeError","useContractFunction","functionName","chainId","promiseTransaction","state","resetState","undefined","events","setEvents","send","contractWithSigner","receipt","logs","reduce","accumulatedLogs","log","address","toLowerCase","interface","parseLog","_err"],"sources":["../../../../src/hooks/useContractFunction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}