{"ast":null,"code":"/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function chainStateReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  var _a, _b, _c;\n\n  const current = (_a = state[action.chainId]) === null || _a === void 0 ? void 0 : _a.blockNumber;\n\n  if (!current || action.blockNumber >= current) {\n    if (action.type === 'FETCH_SUCCESS') {\n      let newState = action.state;\n\n      if (action.blockNumber === current) {\n        // merge with existing state to prevent requests coming out of order\n        // from overwriting the data\n        const oldState = (_c = (_b = state[action.chainId]) === null || _b === void 0 ? void 0 : _b.state) !== null && _c !== void 0 ? _c : {};\n\n        for (const [address, entries] of Object.entries(oldState)) {\n          newState = Object.assign(Object.assign({}, newState), {\n            [address]: Object.assign(Object.assign({}, entries), newState[address])\n          });\n        }\n      }\n\n      return Object.assign(Object.assign({}, state), {\n        [action.chainId]: {\n          blockNumber: action.blockNumber,\n          state: newState\n        }\n      });\n    } else if (action.type === 'FETCH_ERROR') {\n      return Object.assign(Object.assign({}, state), {\n        [action.chainId]: Object.assign(Object.assign({}, state[action.chainId]), {\n          blockNumber: action.blockNumber,\n          error: action.error\n        })\n      });\n    }\n  }\n\n  return state;\n}","map":{"version":3,"mappings":"AAkCA;;;AAGA,OAAM,SAAUA,iBAAV,GAAuE;AAAA,MAA3CC,KAA2C,uEAA5B,EAA4B;AAAA,MAAxBC,MAAwB;;;;AAC3E,QAAMC,OAAO,GAAG,WAAK,CAACD,MAAM,CAACE,OAAR,CAAL,MAAqB,IAArB,IAAqBC,aAArB,GAAqB,MAArB,GAAqBA,GAAEC,WAAvC;;AACA,MAAI,CAACH,OAAD,IAAYD,MAAM,CAACI,WAAP,IAAsBH,OAAtC,EAA+C;AAC7C,QAAID,MAAM,CAACK,IAAP,KAAgB,eAApB,EAAqC;AACnC,UAAIC,QAAQ,GAAGN,MAAM,CAACD,KAAtB;;AACA,UAAIC,MAAM,CAACI,WAAP,KAAuBH,OAA3B,EAAoC;AAClC;AACA;AACA,cAAMM,QAAQ,GAAG,iBAAK,CAACP,MAAM,CAACE,OAAR,CAAL,MAAqB,IAArB,IAAqBM,aAArB,GAAqB,MAArB,GAAqBA,GAAET,KAAvB,MAA4B,IAA5B,IAA4BU,aAA5B,GAA4BA,EAA5B,GAAgC,EAAjD;;AACA,aAAK,MAAM,CAACC,OAAD,EAAUC,OAAV,CAAX,IAAiCC,MAAM,CAACD,OAAP,CAAeJ,QAAf,CAAjC,EAA2D;AACzDD,kBAAQ,mCACHA,QADG,GACK;AACX,aAACI,OAAD,GAASE,gCACJD,OADI,GAEJL,QAAQ,CAACI,OAAD,CAFJ;AADE,WADL,CAAR;AAOD;AACF;;AACD,6CACKX,KADL,GACU;AACR,SAACC,MAAM,CAACE,OAAR,GAAkB;AAAEE,qBAAW,EAAEJ,MAAM,CAACI,WAAtB;AAAmCL,eAAK,EAAEO;AAA1C;AADV,OADV;AAID,KApBD,MAoBO,IAAIN,MAAM,CAACK,IAAP,KAAgB,aAApB,EAAmC;AACxC,6CACKN,KADL,GACU;AACR,SAACC,MAAM,CAACE,OAAR,GAAgBU,gCAAOb,KAAK,CAACC,MAAM,CAACE,OAAR,CAAZ,GAA4B;AAAEE,qBAAW,EAAEJ,MAAM,CAACI,WAAtB;AAAmCS,eAAK,EAAEb,MAAM,CAACa;AAAjD,SAA5B;AADR,OADV;AAID;AACF;;AACD,SAAOd,KAAP;AACD","names":["chainStateReducer","state","action","current","chainId","_a","blockNumber","type","newState","oldState","_b","_c","address","entries","Object","error"],"sources":["../../../../../../src/providers/chainState/common/chainStateReducer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}