{"ast":null,"code":"import { Contract } from 'ethers';\nimport { ERC20Interface } from '../constants';\nimport { useCall } from './useCall';\n/**\n * @public\n */\n\nexport function useTokenBalance(tokenAddress, address) {\n  var queryParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var _a;\n\n  var _ref = (_a = useCall(address && tokenAddress && {\n    contract: new Contract(tokenAddress, ERC20Interface),\n    method: 'balanceOf',\n    args: [address]\n  }, queryParams)) !== null && _a !== void 0 ? _a : {},\n      tokenBalance = _ref.value;\n\n  return tokenBalance === null || tokenBalance === void 0 ? void 0 : tokenBalance[0];\n}","map":{"version":3,"mappings":"AACA,SAASA,QAAT,QAAyB,QAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAGA,SAASC,OAAT,QAAwB,WAAxB;AAEA;;;;AAGA,OAAM,SAAUC,eAAV,CACJC,YADI,EAEJC,OAFI,EAGyB;AAAA,MAA7BC,WAA6B,uEAAF,EAAE;;;;AAE7B,aACE,aAAO,CACLD,OAAO,IACLD,YADF,IACkB;AACdG,YAAQ,EAAE,IAAIP,QAAJ,CAAaI,YAAb,EAA2BH,cAA3B,CADI;AAEdO,UAAM,EAAE,WAFM;AAGdC,QAAI,EAAE,CAACJ,OAAD;AAHQ,GAFb,EAOLC,WAPK,CAAP,MAQC,IARD,IAQCI,aARD,GAQCA,EARD,GAQK,EATP;AAAA,MAAeC,YAAf,QAAQC,KAAR;;AAUA,SAAOD,YAAY,SAAZ,gBAAY,WAAZ,GAAY,MAAZ,eAAY,CAAG,CAAH,CAAnB;AACD","names":["Contract","ERC20Interface","useCall","useTokenBalance","tokenAddress","address","queryParams","contract","method","args","_a","tokenBalance","value"],"sources":["../../../../src/hooks/useTokenBalance.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}