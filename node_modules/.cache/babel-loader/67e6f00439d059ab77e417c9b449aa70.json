{"ast":null,"code":"import _slicedToArray from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useState } from 'react'; // modified from https://usehooks.com/useDebounce/\n\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function useDebounce(value, delay) {\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      debouncedValue = _useState2[0],\n      setDebouncedValue = _useState2[1];\n\n  useEffect(function () {\n    // Update debounced value after delay\n    var handler = setTimeout(function () {\n      setDebouncedValue(value);\n    }, delay); // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n\n    return function () {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n}","map":{"version":3,"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AACA;;;;AAGA,OAAM,SAAUC,WAAV,CAAyBC,KAAzB,EAAmCC,KAAnC,EAAgD;AACpD,kBAA4CH,QAAQ,CAAIE,KAAJ,CAApD;AAAA;AAAA,MAAOE,cAAP;AAAA,MAAuBC,iBAAvB;;AAEAN,WAAS,CAAC,YAAK;AACb;AACA,QAAMO,OAAO,GAAGC,UAAU,CAAC,YAAK;AAC9BF,uBAAiB,CAACH,KAAD,CAAjB;AACD,KAFyB,EAEvBC,KAFuB,CAA1B,CAFa,CAMb;AACA;AACA;;AACA,WAAO,YAAK;AACVK,kBAAY,CAACF,OAAD,CAAZ;AACD,KAFD;AAGD,GAZQ,EAYN,CAACJ,KAAD,EAAQC,KAAR,CAZM,CAAT;AAcA,SAAOC,cAAP;AACD","names":["useEffect","useState","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sources":["../../../../src/hooks/useDebounce.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}