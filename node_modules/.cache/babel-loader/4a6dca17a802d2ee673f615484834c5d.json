{"ast":null,"code":"import { MultiCallABI } from '../constants';\nimport { useMulticallAddress } from './useMulticallAddress';\nimport { useCall } from './useCall';\nimport { Contract } from 'ethers';\n/**\n * @public\n */\n\nexport function useEtherBalance(address) {\n  let queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _a;\n\n  const multicallAddress = useMulticallAddress(queryParams);\n  const {\n    value: value\n  } = (_a = useCall(multicallAddress && address && {\n    contract: new Contract(multicallAddress, MultiCallABI),\n    method: 'getEthBalance',\n    args: [address]\n  }, queryParams)) !== null && _a !== void 0 ? _a : {};\n  return value === null || value === void 0 ? void 0 : value[0];\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,QAA6B,cAA7B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAIA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA;;;;AAGA,OAAM,SAAUC,eAAV,CAA0BC,OAA1B,EAAgF;AAAA,MAA7BC,WAA6B,uEAAF,EAAE;;;;AACpF,QAAMC,gBAAgB,GAAGN,mBAAmB,CAACK,WAAD,CAA5C;AACA,QAAM;AAAEE,SAAK,EAAEA;AAAT,MACJ,aAAO,CACLD,gBAAgB,IACdF,OADF,IACa;AACTI,YAAQ,EAAE,IAAIN,QAAJ,CAAaI,gBAAb,EAA+BP,YAA/B,CADD;AAETU,UAAM,EAAE,eAFC;AAGTC,QAAI,EAAE,CAACN,OAAD;AAHG,GAFR,EAOLC,WAPK,CAAP,MAQC,IARD,IAQCM,aARD,GAQCA,EARD,GAQK,EATP;AAUA,SAAOJ,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAG,CAAH,CAAZ;AACD","names":["MultiCallABI","useMulticallAddress","useCall","Contract","useEtherBalance","address","queryParams","multicallAddress","value","contract","method","args","_a"],"sources":["../../../../src/hooks/useEtherBalance.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}