{"ast":null,"code":"import _defineProperty from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/tomgerhardt/Dropbox/TOM/Web3 Consulting/Node Nation/DAG Nation/shuffle 042622/node_modules/@babel/runtime/regenerator/index.js\";\nimport { jsx as _jsx, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { getChainById } from '../helpers';\nimport { useEthers } from '../hooks';\nimport { useBlockNumber } from './blockNumber/blockNumber';\nimport { useConfig, useUpdateConfig } from './config';\nimport multicallABI from '../constants/abi/MultiCall.json';\nimport { deployContract } from '../helpers/contract';\nvar LocalMulticallState;\n\n(function (LocalMulticallState) {\n  LocalMulticallState[LocalMulticallState[\"Unknown\"] = 0] = \"Unknown\";\n  LocalMulticallState[LocalMulticallState[\"NonLocal\"] = 1] = \"NonLocal\";\n  LocalMulticallState[LocalMulticallState[\"Deploying\"] = 2] = \"Deploying\";\n  LocalMulticallState[LocalMulticallState[\"Deployed\"] = 3] = \"Deployed\";\n  LocalMulticallState[LocalMulticallState[\"Error\"] = 4] = \"Error\";\n})(LocalMulticallState || (LocalMulticallState = {}));\n\nexport function LocalMulticallProvider(_ref) {\n  var children = _ref.children;\n  var updateConfig = useUpdateConfig();\n\n  var _useConfig = useConfig(),\n      multicallAddresses = _useConfig.multicallAddresses;\n\n  var _useEthers = useEthers(),\n      library = _useEthers.library,\n      chainId = _useEthers.chainId;\n\n  var _useState = useState(LocalMulticallState.Unknown),\n      _useState2 = _slicedToArray(_useState, 2),\n      localMulticallState = _useState2[0],\n      setLocalMulticallState = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      multicallBlockNumber = _useState4[0],\n      setMulticallBlockNumber = _useState4[1];\n\n  var blockNumber = useBlockNumber();\n  useEffect(function () {\n    var _a;\n\n    if (!library || !chainId) {\n      setLocalMulticallState(LocalMulticallState.Unknown);\n    } else if (!((_a = getChainById(chainId)) === null || _a === void 0 ? void 0 : _a.isLocalChain)) {\n      setLocalMulticallState(LocalMulticallState.NonLocal);\n    } else if (multicallAddresses && multicallAddresses[chainId]) {\n      setLocalMulticallState(LocalMulticallState.Deployed);\n    } else if (localMulticallState !== LocalMulticallState.Deploying) {\n      var signer = library.getSigner();\n\n      if (!signer) {\n        setLocalMulticallState(LocalMulticallState.Error);\n        return;\n      }\n\n      setLocalMulticallState(LocalMulticallState.Deploying);\n\n      var deployMulticall = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _yield$deployContract, contractAddress, _blockNumber;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return deployContract(multicallABI, signer);\n\n                case 3:\n                  _yield$deployContract = _context.sent;\n                  contractAddress = _yield$deployContract.contractAddress;\n                  _blockNumber = _yield$deployContract.blockNumber;\n                  updateConfig({\n                    multicallAddresses: _defineProperty({}, chainId, contractAddress)\n                  });\n                  setMulticallBlockNumber(_blockNumber);\n                  setLocalMulticallState(LocalMulticallState.Deployed);\n                  _context.next = 14;\n                  break;\n\n                case 11:\n                  _context.prev = 11;\n                  _context.t0 = _context[\"catch\"](0);\n                  setLocalMulticallState(LocalMulticallState.Error);\n\n                case 14:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 11]]);\n        }));\n\n        return function deployMulticall() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      deployMulticall();\n    }\n  }, [library, chainId]);\n  var awaitingMulticallBlock = multicallBlockNumber && blockNumber && blockNumber < multicallBlockNumber;\n\n  if (localMulticallState === LocalMulticallState.Deploying || localMulticallState === LocalMulticallState.Deployed && awaitingMulticallBlock) {\n    return _jsx(\"div\", {\n      children: \"Deploying multicall...\"\n    });\n  } else if (localMulticallState === LocalMulticallState.Error) {\n    return _jsx(\"div\", {\n      children: \"Error deploying multicall contract\"\n    });\n  } else {\n    return _jsx(_Fragment, {\n      children: children\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["useEffect","useState","getChainById","useEthers","useBlockNumber","useConfig","useUpdateConfig","multicallABI","deployContract","LocalMulticallState","LocalMulticallProvider","children","updateConfig","multicallAddresses","library","chainId","Unknown","localMulticallState","setLocalMulticallState","multicallBlockNumber","setMulticallBlockNumber","blockNumber","_a","isLocalChain","NonLocal","Deployed","Deploying","signer","getSigner","Error","deployMulticall","contractAddress","awaitingMulticallBlock","_jsx"],"sources":["../../../../src/providers/LocalMulticallProvider.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}