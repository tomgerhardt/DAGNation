{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { useDebounce } from '../../../hooks';\nimport { useReadonlyNetworks } from '../../network';\nimport { BlockNumbersContext } from './context';\nimport { blockNumberReducer } from '../common/reducer';\nimport { subscribeToNewBlock } from '../common/subscribeToNewBlock';\nexport function BlockNumbersProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const networks = useReadonlyNetworks();\n  const [state, dispatch] = useReducer(blockNumberReducer, {});\n  useEffect(() => {\n    const onUnmount = Object.entries(networks).map(_ref2 => {\n      let [chainId, provider] = _ref2;\n      return subscribeToNewBlock(provider, Number(chainId), dispatch);\n    });\n    return () => {\n      onUnmount.forEach(fn => fn());\n    };\n  }, [networks]);\n  const debouncedState = useDebounce(state, 100);\n  return _jsx(BlockNumbersContext.Provider, {\n    value: debouncedState,\n    children: children\n  });\n}","map":{"version":3,"mappings":";AAAA,SAAoBA,SAApB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,mBAAT,QAAoC,eAApC;AACA,SAASC,mBAAT,QAAoC,WAApC;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,mBAAT,QAAoC,+BAApC;AAMA,OAAM,SAAUC,oBAAV,OAAkD;AAAA,MAAnB;AAAEC;AAAF,GAAmB;AACtD,QAAMC,QAAQ,GAAGN,mBAAmB,EAApC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACI,kBAAD,EAAqB,EAArB,CAApC;AAEAL,WAAS,CAAC,MAAK;AACb,UAAMY,SAAS,GAAGC,MAAM,CAACC,OAAP,CAAeL,QAAf,EAAyBM,GAAzB,CAA6B;AAAA,UAAC,CAACC,OAAD,EAAUC,QAAV,CAAD;AAAA,aAC7CX,mBAAmB,CAACW,QAAD,EAAWC,MAAM,CAACF,OAAD,CAAjB,EAA4BL,QAA5B,CAD0B;AAAA,KAA7B,CAAlB;AAIA,WAAO,MAAK;AACVC,eAAS,CAACO,OAAV,CAAmBC,EAAD,IAAQA,EAAE,EAA5B;AACD,KAFD;AAGD,GARQ,EAQN,CAACX,QAAD,CARM,CAAT;AAUA,QAAMY,cAAc,GAAGnB,WAAW,CAACQ,KAAD,EAAQ,GAAR,CAAlC;AAEA,SAAOY,KAAClB,mBAAmB,CAACmB,QAArB,EAA6B;AAACC,SAAK,EAAEH,cAAR;AAAwBb,YAAQ,EAAEA;AAAlC,GAA7B,CAAP;AACD","names":["useEffect","useReducer","useDebounce","useReadonlyNetworks","BlockNumbersContext","blockNumberReducer","subscribeToNewBlock","BlockNumbersProvider","children","networks","state","dispatch","onUnmount","Object","entries","map","chainId","provider","Number","forEach","fn","debouncedState","_jsx","Provider","value"],"sources":["../../../../../../src/providers/blockNumber/blockNumbers/provider.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}